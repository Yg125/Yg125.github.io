<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>xv6实验1</title>
      <link href="/2022/06/30/xv6_lab1/"/>
      <url>/2022/06/30/xv6_lab1/</url>
      
        <content type="html"><![CDATA[<h1 id="实验一">实验一</h1><h2 id="sleep">Sleep</h2><p>这个任务简单，只需要参考其他指令的实现方式比如<code>rm.c</code>，就可以写出来<br>系统调用函数在<code>user/user.h</code>中，完成sleep.c之后需要将其加入大<code>Makefile</code>中 <code>$U/_sleep\</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (argc != <span class="number">2</span>) &#123; <span class="comment">//参数错误</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Sleep needs one argument!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="type">int</span> ticks=atoi(argv[<span class="number">1</span>]);<span class="comment">//将字符串参数转为整数</span></span><br><span class="line">    sleep(ticks);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;nothing happens for a little while\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">//确保进程退出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="pingpong">pingpong</h2><p>这个任务需要实现父子进程的信息传递</p><ol><li>通过<code>pipe(fd)</code>来创建一个管道，通常用到的管道都是单向的，于是如果要实现双向传递，则需要两个管道</li><li>使用<code>fork()</code>得到的子进程会继承管道，让父子进程分别关闭一端，只使用一端进行<code>read</code>和<code>write</code>即可实现单向传递信息</li><li>父进程要等待子进程结束需要调用<code>wait</code></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> R 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> W 1</span></span><br><span class="line"><span class="type">char</span> buffer[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> pid;</span><br><span class="line">    <span class="type">int</span> fd1[<span class="number">2</span>],fd2[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span>(pipe(fd1) == <span class="number">-1</span> || pipe(fd2) == <span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Pipe failed\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    pid = fork();</span><br><span class="line">    <span class="keyword">if</span>(pid &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fork fail\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(pid == <span class="number">0</span>)  <span class="comment">//child process</span></span><br><span class="line">    &#123;</span><br><span class="line">        close(fd1[W]);</span><br><span class="line">        close(fd2[R]);</span><br><span class="line">        read(fd1[R],buffer,<span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="type">int</span> pid = getpid();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d: received %s\n&quot;</span>,pid,buffer);</span><br><span class="line">        close(fd1[R]);</span><br><span class="line">        write(fd2[W],<span class="string">&quot;pong&quot;</span>,<span class="keyword">sizeof</span>(<span class="string">&quot;pong&quot;</span>));</span><br><span class="line">        close(fd2[W]);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;   <span class="comment">//parent process</span></span><br><span class="line">        close(fd1[R]);</span><br><span class="line">        close(fd2[W]);</span><br><span class="line">        write(fd1[W],<span class="string">&quot;ping&quot;</span>,<span class="keyword">sizeof</span>(<span class="string">&quot;ping&quot;</span>));</span><br><span class="line">        close(fd1[W]);</span><br><span class="line">        wait(<span class="number">0</span>);</span><br><span class="line">        read(fd2[R],buffer,<span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="type">int</span> pid = getpid();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d: received %s\n&quot;</span>,pid,buffer);</span><br><span class="line">        close(fd2[R]);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="primes">primes</h2><p>这个任务比较难</p><ol><li><code>main</code>函数中，创建管道和相应文件描述符，并<code>fork()</code>创建子进程，父进程中关闭读端，将2到35依次以四个字节的<code>int</code>写入管道中，关闭写端，等待子进程结束再退出。</li><li>子进程中以继承得来的文件描述符作为参数调用函数 <code>Child_Process(int fd[2])</code>，退出。</li><li><code>Child_Process(int fd[])</code>用来完成质数筛选，其过程大致为:<ul><li>关闭 <code>fd[1]</code>，从 <code>fd[0]</code>中<strong>读出第一个数字作为质数</strong>，并打印它的信息，如果<code>read()</code>返回<code>0</code>那么就返回</li><li>在函数中再创建管道用于向下一个子进程中传入筛选后的数据，得到相应文件描述符<code>fd_child[2]</code>,创建子进程，子进程递归调用 <code>Child_Process(fd_child)</code>，退出</li><li>在函数父进程中，关闭<code>fd_child</code>的读端，将管道<code>fd</code>中的数据一个一个读出并判断能不能整除刚得到的质数，直到没有数据为止，把不能整除的数据写入下一个管道<code>fd_child</code>，否则直接丢弃。关闭<code>fd</code>的读端，关闭<code>fd_child</code>的写端。等待子进程结束，返回</li></ul></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> R 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> W 1</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Pipe</span><span class="params">(<span class="type">int</span> fd[<span class="number">2</span>])</span>  <span class="comment">//include the false detection</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (pipe(fd) == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;pipe fail\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Fork</span><span class="params">()</span>          <span class="comment">//include the false detection</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> pid = fork();</span><br><span class="line">    <span class="keyword">if</span> (pid &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fork fail\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Child_proc</span><span class="params">(<span class="type">int</span> fd[<span class="number">2</span>])</span></span><br><span class="line">&#123;</span><br><span class="line">    close(fd[W]);</span><br><span class="line">    <span class="type">int</span> fd_child[<span class="number">2</span>];</span><br><span class="line">    pipe(fd_child);</span><br><span class="line">    <span class="type">int</span> prime;</span><br><span class="line">    <span class="type">int</span> testnum;</span><br><span class="line">    <span class="keyword">if</span> (read(fd[R], &amp;prime, <span class="keyword">sizeof</span>(<span class="type">int</span>)) == <span class="number">0</span>)    <span class="comment">//if there is number in the pipe</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;prime %d\n&quot;</span>, prime);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> pid = Fork();</span><br><span class="line">    <span class="keyword">if</span> (pid == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Child_proc(fd_child);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (read(fd[R], &amp;testnum, <span class="keyword">sizeof</span>(<span class="type">int</span>)) != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (testnum % prime != <span class="number">0</span>)</span><br><span class="line">                write(fd_child[W], &amp;testnum, <span class="keyword">sizeof</span>(<span class="type">int</span>)); </span><br><span class="line">        &#125;</span><br><span class="line">        close(fd[R]);</span><br><span class="line">        close(fd_child[W]);</span><br><span class="line">        wait(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> fd[<span class="number">2</span>];</span><br><span class="line">    Pipe(fd);</span><br><span class="line">    <span class="type">int</span> pid = Fork();</span><br><span class="line">    <span class="keyword">if</span> (pid == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Child_proc(fd);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        close(fd[R]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; <span class="number">36</span>; i++)</span><br><span class="line">            write(fd[W], &amp;i, <span class="keyword">sizeof</span>(<span class="type">int</span>)); <span class="comment">//write every elements into pipe</span></span><br><span class="line">        close(fd[W]); <span class="comment">// after finishing write ,close it</span></span><br><span class="line">        wait(<span class="number">0</span>);      <span class="comment">// wait all the child process exit</span></span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="find">find</h2><p>这个任务没什么好说的，仿照<code>ls.c</code>做基本就可以了<br>有几个点有点不同，一个是函数<code>fmtname</code>获取文件名的最后一步不能扩充，只需得到实际文件名再在字符串末尾添加<code>0</code>即可<br>还有就是在目录情况下，需要择去<code>.</code>和<code>..</code>目录，然后在剩余的文件/夹中递归<code>find</code>即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/stat.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/fs.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *<span class="title function_">fmtname</span><span class="params">(<span class="type">char</span> *path)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">char</span> buf[DIRSIZ + <span class="number">1</span>];</span><br><span class="line">    <span class="type">char</span> *p;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Find first character after last slash.</span></span><br><span class="line">    <span class="keyword">for</span> (p = path + <span class="built_in">strlen</span>(path); p &gt;= path &amp;&amp; *p != <span class="string">&#x27;/&#x27;</span>; p--)</span><br><span class="line">        ;</span><br><span class="line">    p++;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Return blank-padded name.</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(p) &gt;= DIRSIZ)</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    memmove(buf, p, <span class="built_in">strlen</span>(p));</span><br><span class="line">    buf[<span class="built_in">strlen</span>(p)] = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//memset(buf + strlen(p), &#x27; &#x27;, DIRSIZ - strlen(p));</span></span><br><span class="line">    <span class="keyword">return</span> buf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">find</span><span class="params">(<span class="type">char</span> *path, <span class="type">char</span> *filename)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">512</span>], *p;</span><br><span class="line">    <span class="type">int</span> fd;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dirent</span> <span class="title">de</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">st</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((fd = open(path, <span class="number">0</span>)) &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="number">2</span>, <span class="string">&quot;find: cannot open %s\n&quot;</span>, path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fstat(fd, &amp;st) &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="number">2</span>, <span class="string">&quot;find: cannot stat %s\n&quot;</span>, path);</span><br><span class="line">        close(fd);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (st.type)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> T_FILE:</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(fmtname(path),filename) == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,path);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> T_DIR:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strlen</span>(path) + <span class="number">1</span> + DIRSIZ + <span class="number">1</span> &gt; <span class="keyword">sizeof</span> buf)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ls: path too long\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">strcpy</span>(buf, path);</span><br><span class="line">        p = buf + <span class="built_in">strlen</span>(buf);</span><br><span class="line">        *p++ = <span class="string">&#x27;/&#x27;</span>; <span class="comment">//p就是path/，之后该目录下的文件可以表示为在p之后加文件名</span></span><br><span class="line">        <span class="keyword">while</span> (read(fd, &amp;de, <span class="keyword">sizeof</span>(de)) == <span class="keyword">sizeof</span>(de))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (de.inum == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(de.name,<span class="string">&quot;.&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(de.name,<span class="string">&quot;..&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            memmove(p, de.name, DIRSIZ);  <span class="comment">//抛开. 和 .. 得到的目录中的文件路径</span></span><br><span class="line">            p[DIRSIZ] = <span class="number">0</span>;</span><br><span class="line">            </span><br><span class="line">            find(buf,filename); <span class="comment">//buf是完整路径</span></span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    close(fd);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;find needs at least three arguments\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    find(argv[<span class="number">1</span>], argv[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="xargs">xargs</h2><p>这个任务其实不难，但是不好理解<br>首先<code>xargs</code>在之前学过的Linux命令中将将标准输入中的数据用空格或回车分割成命令行参数<br>有几点需要注意</p><ol><li>要读取单个输入行，一次读取一个字符，直到出现换行符<code>'\n'</code></li><li>需要循环读入，因为可能有多行，每一行相当于一次命令可以执行，直到没有输入</li><li>通过<code>fork</code>和<code>exec</code>来执行相应命令，传入<code>exec</code>的命令行参数的最后一项必须是0</li><li>原始的<code>argv</code>第一个参数就是<code>xargs</code>，之后的作为新的命令行参数再和标准输入的一起作为整个命令行参数传递至<code>exec</code>中执行</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/param.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">1000</span>];</span><br><span class="line">    <span class="type">char</span> *argv_exec[MAXARG];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>((argc &lt; <span class="number">2</span>) || (argc + <span class="number">1</span> &gt; MAXARG))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;arguments fail\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; argc ;j++)</span><br><span class="line">        argv_exec[j<span class="number">-1</span>] = argv[j];</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(read(<span class="number">0</span>, buf + i,<span class="keyword">sizeof</span>(<span class="type">char</span>)) &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(buf[i] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        buf[i] = <span class="number">0</span>;</span><br><span class="line">        argv_exec[argc - <span class="number">1</span>] = buf;</span><br><span class="line">        argv_exec[argc] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(fork() == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            exec(argv_exec[<span class="number">0</span>],argv_exec);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            wait(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> 计算机组成原理 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xv6实验汇总</title>
      <link href="/2022/06/25/xv6_lab_index/"/>
      <url>/2022/06/25/xv6_lab_index/</url>
      
        <content type="html"><![CDATA[<p>xv6实验中不像平时的C语言程序，走到<code>&#125;</code>就结束了，xv6中进程必须显式地调用<code>exit</code>来结束，否则进程就会一直在那里<br>使用<code>make qemu</code>来编译程序，每一次实验都会有自动评测脚本，可以使用<code>make grade</code>来测试所有任务得分，也可以使用<code>./grade-lab-util xxx</code>来评测某个任务是否完成</p><hr><h1 id="实验目录">实验目录</h1><p><a href="https://yg125.github.io/2022/06/30/xv6_lab1/">util</a></p>]]></content>
      
      
      <categories>
          
          <category> OS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序的机器级表示</title>
      <link href="/2022/06/25/csapp_3/"/>
      <url>/2022/06/25/csapp_3/</url>
      
        <content type="html"><![CDATA[<h1 id="程序的机器级表示">程序的机器级表示</h1><h2 id="历史">历史</h2><p>课上讲述了大量8086的历史，已经在汇编课程汇中详细学习过，并且不是这门课的重点这里不再赘述<br>之后讲到了IA32处理器体系结构<br>需要掌握的是出现了32位寄存器EAX,EBX,ECX,EDX等等,较8086的8位的寄存器AL和16位寄存器AX等有所扩展</p><h2 id="程序编码">程序编码</h2><p>在第一节我们说到了程序是如何转化为可执行代码的，而可执行代码就是机器代码，是计算机能够识别并产生相应操作的代码</p><p>程序员可视的状态包括</p><ol><li>程序计数器（PC）表示下一条指令在内存中的地址</li><li>寄存器文件</li><li>条件码寄存器</li><li>内存（可按字节寻址的数组、程序和数据、栈）<ul><li>程序内存用虚拟内存来寻址，在任意给定的时刻，只有有限的一部分虚拟地址是有效的，目前只有48位有效，高16位必须置为0</li></ul></li></ol><p>gcc的一些参数设置</p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">-o</td><td style="text-align:center">生成可执行文件</td></tr><tr><td style="text-align:center">-c</td><td style="text-align:center">只编译不链接</td></tr><tr><td style="text-align:center">-S</td><td style="text-align:center">生成汇编文件.s</td></tr><tr><td style="text-align:center">-E</td><td style="text-align:center">仅执行编译预处理</td></tr><tr><td style="text-align:center">-wall</td><td style="text-align:center">显示警告信息</td></tr></tbody></table><p>书上还讲了一些反汇编的知识，这里不再细说，感觉不会是考试的重点<br>此书是ATT格式的汇编代码，和Intel格式的汇编代码有所不同，不过基本就是后缀和参数顺序的不同，逻辑都是没差的</p><h2 id="数据格式">数据格式</h2><p>这里需要注意，由于是由16位系统扩展而来的，提到的字都是16位的，32位称为双字，64位成为四字（quad words）<br>具体x86_64下的数据格式大小如下<br><img src="/2022/06/25/csapp_3/1.png" alt="C语言数据类型大小"><br>需要注意的是不管指针指向什么类型，指针大小都是8字节<br>下面是个非常重要的知识点，x86_64的寄存器含义及大小<br>%al -&gt; %ax -&gt; %eax -&gt; %rax<br>所有16个寄存器的低位部分都可以作为字节、字、双字、和四字来访问<br>字节级操作可以访问最低的字节、16位操作可以访问最低的两个字节、32位操作可以访问最低的四个字节（双字）、64位操作可以访问整个完整的64位寄存器<br><img src="/2022/06/25/csapp_3/2.png" alt="整数寄存器"></p><h2 id="访问信息">访问信息</h2><h3 id="操作数指示符">操作数指示符</h3><p>操作数被分为三种类型</p><ol><li>立即数 <code>$num</code></li><li>寄存器操作数 表示某个寄存器中的内容</li><li>内存引用 根据计算出来的有效地址访问内存中指定位置得到的值，这里有多种寻址模式<code>(寄存器)</code>就是以寄存器中的值作为地址去内存中找值，凡是有()都是内存访问<br><img src="/2022/06/25/csapp_3/3.png" alt="操作数格式，比例因子s必须是1、2、4或者8"></li></ol><h3 id="数据传送指令">数据传送指令</h3><p>x86_64的传送指令的两个操作数不能同时都是指向内存位置的，另外需要注意的是mov指令中是前一个传送到后一个，与intel不同<br>这一部分比较复杂，主要涉及指令的后缀<br>由于源和目的类型不同，把许多不同的指令划分为指令类，每一类中的指令执行相同的操作，只不过操作数大小不同</p><ol><li><p>最简单的数据传送指令MOV类 把数据从源位置复制到目的位置，且<strong>不做任何变化</strong><br><img src="/2022/06/25/csapp_3/4.png" alt="简单的MOV"><br>一般情况下MOV指令只会更新目的操作数指定的那些字节，其余不变；唯一的例外是movl指令以寄存器为目的时会把寄存器的高4字节置为0</p><blockquote><p>为什么会有movabsq指令：因为处理64位立即数时常规的mov指令只能处理32位立即数</p></blockquote><p>movl比movq快，并且可以直接将前4字节置零，适用于无符号或者正数的立即数传送指令</p></li><li><p>MOVZ类指令<br>将较小的源操作数复制到较大的目的时使用<br>MOVZ类中的指令把目的中剩余的字节填充为0<br><img src="/2022/06/25/csapp_3/5.png" alt="零扩展的MOVZ"></p></li><li><p>MOVS类指令<br>将较小的源操作数复制到较大的目的时使用<br>MOVZ类中的指令把目的中剩余的字节按符号填充<br><img src="/2022/06/25/csapp_3/6.png" alt="符号扩展的MOVS"><br>规定：如果强制类型转换既涉及大小变化又涉及符号变化，操作应先改变大小</p></li></ol><p>该部分最后还要提一下栈<br>push操作把数据压入栈，栈顶指针减少；pop操作删除数据，栈顶指针增加<br>总是在栈顶插入和删除元素<br>在x86_64中程序栈存放在内存中的某个区域，向下增长，那么栈顶元素就是所有栈中元素最低的 并且寄存器%rsp保存着栈顶元素的地址<br><strong>入栈出栈操作涉及的都是四字</strong><br>由于栈和程序代码以及其他形式的程序数据都是放在同一内存中，所以程序可以用标准的内存寻址方式访问栈内的任意位置</p><h2 id="算术和逻辑操作">算术和逻辑操作</h2><p><img src="/2022/06/25/csapp_3/7.png" alt="整数算数操作汇总表"></p><p>其中leaq(加载有效地址)实际上是movq指令的变形<br>将内存指定位置的有效地址存入寄存器中，但实际上并没有从内存中读取数据，只是简单地完成了线性计算，于是编译器可以通过leaq有效的执行计算</p><blockquote><p>leaq原理<br>leaq (%rdi,%rsi,4),%rax<br>简单地理解就是(%rdi,%rsi,4)计算内存地址，%rdi + 4*%rsi,然后leaq直接将其值传送给%rax</p></blockquote><p>二元算数操作都是后面的作为目的操作数，相当于进行了 <code>op=</code></p><blockquote><p>比如 addq %rdx,%rax &lt;=&gt; %rax += %rdx</p></blockquote><p>之后是移位操作<br>左移操作中SAL和SHL都是一样的效果，右边填0<br>右移操作中SAR执行算术移位，填上符号位，SHR执行逻辑移位，填0</p><p>最后是乘除操作<br>乘法包括无符号乘法(mulq)和有符号乘法(imulq)<br>乘法指令都要求一个参数必须在%rax中，另一个参数作为指令的源操作数给出<br>计算出的结果存放在寄存器%rdx(高64位)和%rax(低64位)中<br>除法包括无符号除法(divq)和有符号除法(idivq)<br>通常是%rdx和%rax保存被除数的高64位和低64位，除数由指令源操作数给出，计算结果商保存在%rax中，余数保存在%rdx中<br>当除法溢出的时候，所有算数标志状态都不确定</p><h2 id="控制">控制</h2><p>这一部分的所有内容都是重点</p><h3 id="条件码">条件码</h3><p>CPU中除了整数寄存器还有一组单个位的条件码寄存器，常用的条件码有：<br>CF：进位标志 用于无符号数的溢出检测<br>OF：溢出标志 用于有符号数的溢出检测<br>SF：符号标志<br>ZF：零标志 最近的操作得出的结果为0<br>除了leaq不会改变条件码以外算术逻辑运算都会改变条件码<br>这里需要提出一种在跳转指令中经常使用的指令CMP类和TEST类<br><img src="/2022/06/25/csapp_3/8.png" alt="比较和测试指令"><br><strong>这些指令不修改任何寄存器的值，只设置条件码</strong><br>注意的是CMP也是后面减前面，TEST是两个相与</p><p>条件码不会直接读取，而有些指令可以访问</p><ol><li>根据条件码的某种组合，将一个字节设置为0或1   set</li><li>可以条件跳转到程序的某个其他部分 jXX</li><li>有条件地传送数据</li></ol><p>接下来依次介绍<br><img src="/2022/06/25/csapp_3/9.png" alt="SET指令"><br>SET指令的后缀是判断某个条件码而不是看字节数</p><p>跳转指令<br>jmp 无条件跳转<br>jXX 有条件跳转<br><img src="/2022/06/25/csapp_3/10.png" alt="jump指令"><br>同样，后缀是判断某个条件码而不是字节<br>无符号用ja，jb；有符号用jg，jl</p><p>条件传送指令<br><img src="/2022/06/25/csapp_3/11.png" alt="条件传送指令"><br>不支持单字节传送，根据目的寄存器的名字推断出传送指令的操作数长度</p><p>在使用PC相对寻址时，即jmp之后的地址是相对于PC的相对地址而不是绝对地址时，此时的PC应该是当前执行指令的下一条而不是现在这条，再加上相对地址得到跳转的地址 （其实与PC本身的含义是一致的，不过不太好理解）</p><h3 id="实现条件分支">实现条件分支</h3><h4 id="用条件控制来实现条件分支">用条件控制来实现条件分支</h4><p>采用goto类语句<br>将C语言中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (*test-expr*)</span><br><span class="line">   *then-statement*</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   *<span class="keyword">else</span>-statement*</span><br></pre></td></tr></table></figure><p>转化为汇编中的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   t = *test-expr*;</span><br><span class="line">   if(!t)</span><br><span class="line">      goto false;</span><br><span class="line">   *then-statement*</span><br><span class="line">   goto done;</span><br><span class="line">false:</span><br><span class="line">   *else-statement*</span><br><span class="line">done:</span><br></pre></td></tr></table></figure><h4 id="用条件传送实现条件分支">用条件传送实现条件分支</h4><p>由于现代处理器中流水线机制对于预测失效的损失较大，所以考虑这种条件传送来实现条件分支<br>方法：计算一个条件操作的两种结果，然后根据条件是否满足从中选取一个<br>即将汇编代码变形为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v = *then-expr*;</span><br><span class="line">ve = *else-expr*;</span><br><span class="line">t = *test-expr*;</span><br><span class="line">if(!t) v = ve;</span><br></pre></td></tr></table></figure><p><strong>注意 只有在受限情况中此策略才可行</strong><br>比如在必须先判断某个分支能否进行的情况下不能使用，另外在分支计算量很大的时候也不能使用，相当于没有减少处罚</p><h3 id="循环">循环</h3><p>C语言中有多种循环结构 <code>do-while</code> <code>while</code> <code>for</code>，汇编通过<strong>条件测试</strong>和<strong>跳转组合</strong>来实现循环的效果<br>do-while循环  翻译成如下的条件和goto</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">loop: </span><br><span class="line">   *body-statement*</span><br><span class="line">   t = *test-expr*;</span><br><span class="line">   <span class="keyword">if</span>(t)</span><br><span class="line">      <span class="keyword">goto</span> loop;</span><br></pre></td></tr></table></figure><p>while循环有两种翻译方式</p><ol><li>jump to middle<br>执行一个无条件跳转到循环结尾处的测试，再进行循环<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">goto</span> test;</span><br><span class="line">loop:</span><br><span class="line">   *body-statement*</span><br><span class="line">test:</span><br><span class="line">   t = *test-expr*;</span><br><span class="line">   <span class="keyword">if</span>(t)</span><br><span class="line">      <span class="keyword">goto</span> loop;</span><br></pre></td></tr></table></figure></li><li>guarded-do<br>首先用条件分支判断再决定是否循环<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">t = *test-expr*</span><br><span class="line"><span class="keyword">if</span>(!t)</span><br><span class="line">   <span class="keyword">goto</span> done;</span><br><span class="line">loop:</span><br><span class="line">   *body-statement*</span><br><span class="line">   t = *test-expr*;</span><br><span class="line">   <span class="keyword">if</span>(t)</span><br><span class="line">      <span class="keyword">goto</span> loop;</span><br><span class="line">done:</span><br></pre></td></tr></table></figure></li></ol><p>for循环和while循环类似，不再赘述</p><h3 id="switch语句">switch语句</h3><p>switch语句的特性<br>当一个case匹配时会执行之后的所有语句，直到break 所以会出现多case，下穿，缺失case现象</p><p>使用switch语句会产生跳转表更加高效（跳转表由编译器自动生成），即一个数组，表项i是一个代码段的地址，当程序的开关索引值等于i时程序执行相应动作<br>使用跳转表的优点是执行开关语句的时间与开关情况的数量无关</p><p><img src="/2022/06/25/csapp_3/12.png" alt="switch语句示例"><br>基地址由.L4给出，再根据索引找出目标地址，<strong>每个目标需要8字节</strong><br>在汇编代码第二行先设置6为case最大值，大于6的话那么直接default，否则查表跳转</p><p>如果有下穿的情况，并且两/多种使用同一变量中途改变了，编译器会自动处理，在指定case开始时再重新对变量初始化<br><img src="/2022/06/25/csapp_3/13.png" alt="处理下穿"><br>如图所示，当x为2时会有下穿，改变了w之后直接跳到L6执行，而当x为3时，先执行L9重新对w赋值再执行L6操作，这些都是编译器自动实现的</p><h2 id="过程">过程</h2><p>假设过程P调用过程Q，Q执行后返回到P，这个动作需要包括</p><ul><li>传递控制<br>调用Q时，程序计数器设置为Q的起始地址<br>返回P时程序计数器设置为Q后面的那条指令的地址</li><li>传递数据<br>P能够向Q提供一个或多个参数，Q能够向P返回一个值</li><li>分配和释放内存<br>过程运行期间为局部变量分配空间，返回时释放这些空间</li></ul><p>这三个部分会在之后分别详细介绍<br>这里提几个预备知识<br>过程的局部变量都是分配在栈中（如必要），<strong>栈和程序寄存器</strong>保存着传递控制、数据和分配内存所需要的信息<br>栈在内存空间中是从高到低生长的，同时也遵循LIFO原则，通过将%rsp栈顶指针减少（8的倍数）即可往栈中添加元素<br>pushq popq  都必须操作寄存器（因为栈本身也是内存中的，不能同时操作内存）<br>popq时只是将指针加8，那个值还是在那里<br><img src="/2022/06/25/csapp_3/14.png" alt="栈帧结构"><br>当过程所需的存储空间超出寄存器能够存放的大小时，就需要在栈上分配空间，即栈帧。<br><font color="red">注意此图中P调用Q时，P的返回地址是在P的栈帧中的</font></p><p>实际上，许多函数根本不需要栈帧，当所有的局部变量都可以保存在寄存器中时，并且该函数不会调用任何其他函数时就可以不需要栈帧。（对标后文）</p><p>思考一个问题 %rbp作为栈基地址是非必需的，既然非必需那么又怎样确定一个过程的栈帧大小呢？</p><blockquote><p>%rsp是确定的，而编译器在产生汇编的时候就会直接预判所需的栈帧大小，而分配栈帧的本质就是通过改变%rsp的位置，所以在分配的时候%rsp减多少，就是栈帧大小</p></blockquote><h3 id="传递控制">传递控制</h3><p>理解了C语言中函数调用和返回就行<br>call func 将返回地址（<strong>call指令的下一条指令地址</strong>）入栈push %rip变为func中的首地址<br>ret pop弹出返回地址，%rip变为返回地址</p><h3 id="传递数据">传递数据</h3><p><img src="/2022/06/25/csapp_3/15.png" alt="参数传递"><br>通过寄存器，过程调用时P最多传递6个整数，如果还需要更多则<strong>P需要在栈帧中保存相应参数再调用Q</strong><br>将参数1-6的值放到对应寄存器中，将参数7-n放到栈上，参数7是置于栈顶，见上图“栈帧结构”</p><h3 id="管理局部数据">管理局部数据</h3><h4 id="栈上的局部存储">栈上的局部存储</h4><p>什么情况会将局部数据存放在内存中</p><ul><li>寄存器不足够存放所有本地的数据</li><li>对一个局部变量使用地址运算符‘&amp;’，因此必须为其产生一个地址</li><li>某些局部变量是数组或结构，必须放到内存中<br>通常分配这些空间都是在栈上完成的</li></ul><h4 id="寄存器中的局部存储空间">寄存器中的局部存储空间</h4><p>寄存器被所有过程共享<br>为了保证当一个过程调用另一个过程时，被调用者不会覆盖调用者会使用的寄存器值需要遵循以下惯例<br>寄存器%rbx,%rbp,%r12~%r15划分为<strong>被调用者保存寄存器</strong>，P调用Q时，Q必须保存这些寄存器的值，保证在Q返回到P时与调用前是一样的</p><p>寄存器%rax,%rdi,%rsi,%rdx,%rcx,%r8,%r9,%r10,%r11都是<strong>调用者保存的寄存器</strong>，过程P在这些个寄存器中存有局部数据，调用Q之前P必须先将它们保存<br><em>通过压栈来保存</em></p><h3 id="递归">递归</h3><p>递归无需特殊处理，栈帧意味着每个过程调用在栈上私有的存储（保存的寄存器，局部变量，保存的返回地址）</p><h2 id="数据">数据</h2><h3 id="数组">数组</h3><p>数组是在内存中连续分配的字节</p><blockquote><p>指针数组：每个元素都是指针的数组 比如char *arr[4] 由于<code>[]</code>优先级高于<code>*</code>，首先是数组，然后是指针<br>数组指针：数组的指针 首先这个变量是一个指针，其次，”数组”修饰这个指针，意思是说这个指针存放着一个数组的首地址，比如 char (*pa)[4] 和 char pa[4]一样</p></blockquote><p><img src="/2022/06/25/csapp_3/16.png" alt="理解指针和数组"></p><p>指针的运算<br>指针的运算需要根据指针指向的类型进行伸缩，E指向int数组，xe是数组的首地址</p><table><thead><tr><th style="text-align:center">表达式</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center">E</td><td style="text-align:center">xe</td></tr><tr><td style="text-align:center">E+i-1</td><td style="text-align:center">xe+4*i-4</td></tr><tr><td style="text-align:center"><code>*</code>(E+i-3)</td><td style="text-align:center">M[xe+4*i-12]</td></tr></tbody></table><p>这里介绍两种二维数组</p><ol><li>嵌套数组<br><img src="/2022/06/25/csapp_3/17.png" alt="嵌套数组定义"><br><img src="/2022/06/25/csapp_3/18.png" alt></li><li>多层次数组<br><img src="/2022/06/25/csapp_3/19.png" alt="多层次数组"></li></ol><p>虽然二者计算地址方式相似，但是由于多层次数组中先访问指针再去找数组，所以需要访存两次，嵌套数组直接访存一次即可</p><h3 id="结构体">结构体</h3><p>结构体的所有组成部分都存放在内存中一段连续的区域内，指向结构体的指针就是结构的第一个字节的地址<br>字段顺序必须与声明顺序一致<br>结构体部分只需要掌握<strong>对齐</strong><br>结构体中定义的每个数据类型所占字节数为k，其中最大的字节数是K</p><ol><li>总的结构体所占内存大小需要是K的整数倍 如果不足需在末尾补至K的整数倍</li><li>每一个变量地址起始都必须是自身k的整数倍 如果不是的话需要在之前补上直到自己开始的地址是k的整数倍</li></ol><p><font color="red">注意，涉及指针都是8字节</font></p><h3 id="联合体">联合体</h3><p>一个联合体的总大小等于最大字段的大小</p><h2 id="内存相关">内存相关</h2><p><img src="/2022/06/25/csapp_3/20.png" alt="x86-64内存布局"><br>由地址空间可以看出实际只有47位地址有效</p><p>这里需要注意的是C语言不会明确对越界访问做出程序崩溃等举动，而且局部变量和状态信息都存放在栈中，对越界的数组元素进行写操作会破坏存储在栈中的状态信息，甚至改变返回地址，产生严重错误<br>关于缓冲区溢出，总的来讲就是以下问题<br><img src="/2022/06/25/csapp_3/21.png" alt="缓冲区溢出"></p><p><img src="/2022/06/25/csapp_3/22.png" alt="内存布局"></p><p>最后浮点代码部分仅作了解，这里不再介绍</p><p><em>ppt37和书164页返回地址应该是call了之后才有的</em></p>]]></content>
      
      
      <categories>
          
          <category> CSAPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> 计算机组成原理 </tag>
            
            <tag> 计算机网络 </tag>
            
            <tag> 编译原理 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息的表示和处理</title>
      <link href="/2022/06/25/csapp_2/"/>
      <url>/2022/06/25/csapp_2/</url>
      
        <content type="html"><![CDATA[<h1 id="信息的表示和处理">信息的表示和处理</h1><p>本章的重点</p><ol><li>整数的表示</li><li>整数的扩展和截断</li><li>整数的运算</li><li>浮点数</li></ol><h2 id="信息存储">信息存储</h2><p>字节作为最小的可寻址的内存单元 机器级程序将内存视为一个非常大的字节数组 即虚拟内存 每个字节都有一个唯一标识的数字 即地址</p><p>每台计算机都有一个字长，即指针大小，用来标识虚拟内存大小 即一个机器字长为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>位的机器而言，虚拟地址范围为0~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">2^w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span>-1，程序最多访问<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">2^w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span>字节</p><h3 id="寻址和字节顺序">寻址和字节顺序</h3><p>字节顺序有两种</p><ol><li>大端<br>低字节在高地址，高字节在低地址</li><li>小端<br>低字节在低地址，高字节在高地址<br>现在的机器中Linux32、64 以及Windows都是小端机器；Sun是大端机器</li></ol><h3 id="c语言">C语言</h3><p>位级运算<br><code>~</code> 注意将这个数的<strong>所有位</strong>全部反转<br><code>^</code>、 <code>&amp;</code> 、<code>|</code> 注意将两个数的<strong>所有位</strong>异或、与、或得到新的值<br>逻辑运算<br>以上的位级运算得到的结果是32bit/64bit 根据数据类型决定<br>逻辑运算<code>!</code> <code>&amp;&amp;</code> <code>||</code>得到的就是一位，0或1<br><code>!!num</code>常用来判断num是否为0，并得到一个单独的数位<br>移位运算<br>C语言左移就是用0填充<br>右移如果是有符号数那么用符号位填充，无符号数则相当于逻辑右移</p><h2 id="整数表示">整数表示</h2><p>无符号数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span>写成二进制[<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_{w-1},x_{w-2}, ... ,x_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>]<br>那么 其表示的数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mn>2</mn><msub><mi>U</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>x</mi><mi>i</mi></msub><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">B2U_{w}(\vec{x})=\sum_{i=0}^{w-1}x_{i}2^{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><msup><mn>2</mn><mi>w</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">U_{max}=2^{w}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br>有多少位表示最大值就是2的多少次方减1<br>表示范围为0~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{w}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>有符号数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span>使用补码表示，最高位为符号位<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msubsup><msub><mi>x</mi><mi>i</mi></msub><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">B2T_w(\vec{x})=-x_{w-1}2^{w-1}+\sum_{i=0}^{w-2}x_{i}2^{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0224389999999999em;vertical-align:-0.208331em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span></span><br>相当于最高位取负数再加后面的<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><mo>−</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">T_{min}=-2^{w-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>也就是 1000…000<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">T_{max}=2^{w-1}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>也就是 0111…111<br>因为有一位表示符号位，所以有多少位表示T，最大就是2的w-1次方再减1，最小就是2的w-1次方<br>-1 表示为 111…111<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>没有与之对应的正数<br>观察得知<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>T</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>T</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>+</mo><mn>1</mn><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|T_{min}| = |T_{max}+1|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">∣</span></span></span></span> 非对称<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><mn>2</mn><mo>∗</mo><msub><mi>T</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">U_{max}=2*T_{max}+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><h3 id="有符号数和无符号数之间的转换">有符号数和无符号数之间的转换</h3><p>强制类型转换不会改变数字本身，但是其表达的含义会发生变化 也就是位模式不变，但是表示的数值可能会变<br>函数U2T是无符号转到有符号 函数T2U是有符号转到无符号<br><img src="/2022/06/25/csapp_2/1.png" alt="符号转换"><br>记忆公式相对繁琐，总结起来就是以下一句话</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo>≤</mo><msub><mi>T</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">0\leq x \leq T_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的转换数值不变T2U(x)=x,U2T(x)=x<br>在这个范围之外的转换需要加上或者减去<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">2^{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span></p></blockquote><h3 id="c语言中有符号数和无符号数">C语言中有符号数和无符号数</h3><p>C语言将常量数字默认为有符号数<br>无符号数需要用后缀U显式表示<br><font color="red">当执行运算时，如果两个操作数中既有有符号数又有无符号数，那么C语言会隐式地将有符号数强转为无符号数来运算</font><br><img src="/2022/06/25/csapp_2/2.png" alt="类型转换"></p><h3 id="扩展">扩展</h3><p>无符号数零扩展；有符号数符号扩展<br>从短整数类型到长整数类型转换时，C自动进行符号扩展</p><h3 id="截断">截断</h3><p>无符号数截断 将x对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>取模，只要最后的k位<br>有符号数截断类似，只不过截断后的数按照补码进行解读</p>]]></content>
      
      
      <categories>
          
          <category> CSAPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> 计算机组成原理 </tag>
            
            <tag> 计算机网络 </tag>
            
            <tag> 编译原理 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机系统漫游</title>
      <link href="/2022/06/25/csapp_1/"/>
      <url>/2022/06/25/csapp_1/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>本章主要是全书的一个概览，基本囊括了全书要讲述的所有内容提要，在之后对应的章节中会有相应的详细解释和说明</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello, world\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个简单的C代码将引入本书的内容，包括一些程序创建到在系统上运行，输出信息，终止。</p><h2 id="1-1-信息就是位-上下文">1.1 信息就是位➕上下文</h2><p>这一个源程序hello.c是以字节序列存储在文件中过的，每个字节都有对应的整数(ASCII码)表示<br>那么也就是说系统中所有的信息——包括磁盘文件、内存中的文件都是由一串比特表示的，用过这些数据对象的上下文来对它们的含义进行区分</p><h2 id="1-2-程序被其他程序翻译成不同的格式">1.2 程序被其他程序翻译成不同的格式</h2><p>这里会介绍Linux中是如何将hello.c程序转变为hello可执行文件的<br><code>gcc hello.c -o hello</code><br>其中包含的过程如下<br><img src="/2022/06/25/csapp_1/through.png" alt="转换过程"></p><ul><li>预处理相当于读取头文件 得到.i文件</li><li>编译是将hello.i翻译成文本文件hello.s<strong>汇编语言程序</strong>（更低级）</li><li>汇编是将hello.s汇编语言翻译成计算机能看懂的<strong>机器指令</strong>，也就是01序列，并且打包为一种可重定位目标程序的格式，保存在hello.o中</li><li>链接是链接器ld调用的库函数合并到hello.o中，得到hello可执行文件，可以加载到内存中执行</li><li>在OS课程中学到<strong>链接得到的程序中的地址是逻辑地址</strong>，也就是可重定位地址，还需要<strong>装入</strong><ul><li>装入分为绝对装入、静态装入、动态装入</li><li>绝对装入很少使用，只适合于单道程序环境</li><li>静态装入是这个可执行文件加载到内存中就根据偏移等计算出物理地址，且在程序运行期间不能改变</li><li>动态装入是这个文件加载到内存时依然是逻辑地址，在运行时才根据CPU中的重定位寄存器计算物理地址，这种方式允许程序在内存中发生移动</li></ul></li></ul><h2 id="1-3-cpu如何运行程序">1.3 CPU如何运行程序</h2><p>在Linux系统中，<code>linux&gt;./hello</code>将加载并运行这个可执行文件<br>这里需要提及系统的硬件组成</p><ol><li><p>总线<br>贯穿于整个系统的一组电子管道<br>携带信息字节并在各个部件间传递，通常传递定长的字节块也就是字<br><font color="red">机器字长</font>：CPU能一次处理数据的位数，一般与CPU中寄存器位数有关。字长多少位地址也是多少位<br>总线上信息的传递方式分为<strong>串行</strong>和<strong>并行</strong><br>其中分类可以分为</p><ul><li>片内总线</li><li>系统总线<ul><li>数据 双向</li><li>地址 单向</li><li>控制 有出有入</li></ul></li><li>通信总线</li></ul></li><li><p>I/O设备<br>系统与外界的联系通道，包括磁盘、显示器、鼠标键盘等等<br>最开始，可执行程序存放在磁盘上<br>I/O接口是主机与I/O设备之间设置的一个硬件电路及其相应的软件控制<br>每一台I/O设备都是由I/O接口挂到I/O总线上的，也就是系统到I/O的系统总线<br>其中I/O总线包括</p><ul><li>数据线     传送数据</li><li>设备选择线  选址</li><li>命令线     传送命令</li><li>状态线     反应设备状态</li></ul></li><li><p>主存储器<br>也是通常说的内存<br>存储器是一个线性的字节数组，每个地址对应一个存储单元</p></li><li><p>处理器<br>也就是CPU<br>核心是一个大小为一个字的存储设备，程序计数器PC，指向下一条应该执行的指令<br>CPU可能会在指令的要求下执行加载、存储、操作、跳转等任务</p></li></ol><p>下面详细介绍如何运行程序</p><ol><li><p>输入<code>./hello</code>命令，就会将命令读如寄存器，再放到内存中<br><img src="/2022/06/25/csapp_1/process1.png" alt="从键盘获取命令"></p></li><li><p>shell执行一系列指令从磁盘中加载可执行文件hello到内存中 （这里利用了直接存储器存取DMA，数据直接由外村到达内存而不通过处理器）<br><img src="/2022/06/25/csapp_1/process2.png" alt="从磁盘加载可执行文件到内存"></p><ul><li>DMA方式</li><li>DMA和主存之间有一条数据通路，主存和设备交换信息时不通过CPU可以直接交换</li><li>另外学过的两种获取I/O数据的方式分别为程序查询方式和程序中断方式，都需要先讲数据送到CPU，再送往内存</li><li>DMA与主存交换数据的三种方法<ul><li>停止CPU访问主存</li><li>周期挪用</li><li>DMA和CPU交替访存</li><li><a href="https://baike.baidu.com/item/DMA/2385376">详见链接</a></li></ul></li></ul></li><li><p>处理器开始执行hello程序并将结果复制到寄存器中，再由寄存器输出到显示器（这里由汇编知识不难理解，I/O指令需要操作寄存器中的内容）<br><img src="/2022/06/25/csapp_1/process3.png" alt="将输出结果输出到显示器"></p></li></ol><h2 id="1-4-存储设备形成层次结构">1.4 存储设备形成层次结构</h2><p>由于I/O设备访问内存的优先级高于CPU，并且CPU和内存之间存在速度差异，所以为了避免CPU“空等”，产生了高速缓冲存储器<br>通常，在有缓存（广义的）的存储器结构中，都是优先访问缓存，若命中，那么就直接得到数据，否则访问下一级，得到数据并将得到的数据写入缓存<br><em>具体会在之后的章节中讲到</em><br>存储器层次结构的的主要思想是上一层的存储器作为低一层存储器的高速缓存<br><img src="/2022/06/25/csapp_1/structure.png" alt="存储器层次结构"></p><h2 id="1-5-操作系统管理硬件">1.5 操作系统管理硬件</h2><p>在程序运行的整个过程中，都没有提到什么部件直接访问底层硬件，相反，它们都依靠操作系统提供服务<br>操作系统可以理解为应用程序和硬件之间插入的一层软件，所有应用对硬件的操作都必须通过操作系统<br>操作系统的两个主要功能</p><ul><li>防止硬件被失控的硬件程序滥用</li><li>向应用程序提供简单一致的机制来控制复杂而又通常大不相同的低级硬件设备</li></ul><p>操作系统通过几个抽象概念来实现这两个功能</p><ol><li>文件即对I/O设备的抽象</li><li>虚拟内存即对主存和磁盘I/O设备的抽象</li><li>进程即对处理器、主存和I/O设备的抽象表示</li><li>当以上内容加上操作系统可以抽象出虚拟机<br><img src="/2022/06/25/csapp_1/subtle.png" alt="计算机系统提供的一些抽象概念"><br>这些内容在后面的章节中都会详细讲解，这里先简单提两句</li></ol><ul><li>进程最重要的概念就是进程是活动事体，而程序是被动实体，只有当一个可执行文件加载到内存中才成为进程</li><li>虚拟内存为每个进程提供了独占的内存空间，每个进程看到的内存都是一致的，每个进程都能占有CPU可寻址的线性地址空间，但实际上是采用了分页存储和请求调页机制来实现</li><li>Linux皆文件，通过将I/O设备视为文件可以更好地管理</li></ul><h2 id="1-6-amdahl定律">1.6 Amdahl定律</h2><p>当对系统的某个部件进行加速时，其对系统整体性能的影响取决于该部分的重要性和加速程度<br>假设系统某部分所需执行时间与该事件的比例为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>，而该部分性能提升比例为<em>k</em>那么<br>总的执行时间为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mi>α</mi><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><mi mathvariant="normal">/</mi><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mo>+</mo><mi>α</mi><mi mathvariant="normal">/</mi><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">T_{new} = (1 - \alpha)T_{old}+(\alpha T_{old}/k)=T_{old}[(1-\alpha)+\alpha/k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span></span></p><p>那么加速比   <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><mi mathvariant="normal">/</mi><msub><mi>T</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S=T_{old}/T_{new}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mo>+</mo><mi>α</mi><mi mathvariant="normal">/</mi><mi>k</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">S = \frac{1}{(1-\alpha)+\alpha/k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>可以看出，要想显著加速整个系统，必须提升全系统中相当大部分的速度</p><h2 id="1-7-并发与并行">1.7 并发与并行</h2><p>并发，是指多个进程在同个CPU中交替使用，宏观上表现为同时使用，微观上来看还是分时使用<br>并行，通常是指多个线程在同一CPU中同时运行，真正的同时<br>多CPU的运行，对应进程的运行状态；多核CPU的运行对应线程的运行状态<br>进程可以在多个CPU中并行运行，但是同一个CPU中同一时间只能运行一个进程，可以通过并发看起来同时进行<br>线程可以在多核CPU中并行运行</p><h2 id="1-8-关于上课的思考和实践">1.8 关于上课的思考和实践</h2><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x^2 \geq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.950078em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>对于float始终成立，但是对于int型不一定始终成立——因为int可能会溢出，而int是有符号数，溢出后变为负数</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>z</mi><mo>=</mo><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>+</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x+y)+z=x+(y+z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> ?</p><p>int 和 unsigned来讲是成立的<br>但是对于float来讲不一定<br>例如计算<br>(1e20 + -1e20) + 3.14 --&gt;3.14<br>1e20 + (-1e20 + 3.14) --&gt;0<br><img src="/2022/06/25/csapp_1/ex1.png" alt="结果演示"><br>由于浮点数frac位数有限，当先计算-1e20+3.14时就把后面的位数丢弃了</p><p><strong>存储引用Bug</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">2</span>];</span><br><span class="line">    <span class="type">double</span> d;</span><br><span class="line">&#125;<span class="type">struct_t</span>;</span><br><span class="line"><span class="type">double</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">    <span class="keyword">volatile</span> <span class="type">struct_t</span> s;</span><br><span class="line">    s.d = <span class="number">3.14</span>;</span><br><span class="line">    s.a[i] = <span class="number">1073741824</span>;<span class="comment">//Possibly out of bounds</span></span><br><span class="line">    <span class="keyword">return</span> s.d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt;= <span class="number">6</span>;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fun(%d)-&gt;%lf\n&quot;</span>,i,fun(i));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是依据特定系统的<br><img src="/2022/06/25/csapp_1/ex2.png" alt="结果演示"><br>这一题作为作业题出现了，老师上课也明确解释过了<br>原因是地址空间是连续分配的，当访问超出数组a[]的值之后就会出现异常， s.a[i] = 0x40000000<br>double类型浮点数是64位的，占用2号和3号地址，并且按照IEEE754标准表示<br>fun(0),fun(1),fun(4)都没有对2和3号地址有影响所以返回正常的3.14<br>而fun(2)由于是double的低32位，改变了小数部分所以导致fun(2) = 3.13999986648<br>fun(3)由于是double的高32位，改变了小数的阶码和部分小数部分，所以导致fun(3) = 2.00000061035156</p><p>但是在访问a[6]就直接错误了，因为那是不能访问的部分区域<br><img src="/2022/06/25/csapp_1/ex3.png" alt="原因"></p>]]></content>
      
      
      <categories>
          
          <category> CSAPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> 计算机组成原理 </tag>
            
            <tag> 计算机网络 </tag>
            
            <tag> 编译原理 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP课程目录</title>
      <link href="/2022/06/25/csapp_index/"/>
      <url>/2022/06/25/csapp_index/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>这是本人在哈尔滨工业大学（深圳）大三夏季学期中对于学习过的计算机知识加以总结和反思，中间会穿插很多我对于已学知识的思考<br>因为这很有可能是本人最后一次这么系统认真的学习计算机系统的知识，所以想记录学习的过程<br><font color="red">全文主要是基于CSAPP书籍及相关课程</font><br><em>This book is written for programmers who want to get better at their craft by understanding how these components work and how they affect the correctness and performance of their programs</em></p><h2 id="参考资料">参考资料</h2><ol><li>Computer Systems: A Programmer’s Perspective, 3/E (CS:APP3e)Randal E. Bryant and David R. O’Hallaron, Carnegie Mellon University</li><li>Operating Systems: Three Easy Pieces Remzi H. Arpaci-Dusseau and Andrea C. Arpaci-Dusseau (University of Wisconsin-Madison)</li><li><a href="https://hansimov.gitbook.io/csapp/">https://hansimov.gitbook.io/csapp/</a></li><li><a href="https://wdxtub.com/csapp/thick-csapp-lab-0/2016/04/16/">https://wdxtub.com/csapp/thick-csapp-lab-0/2016/04/16/</a></li><li>哈尔滨工业大学（深圳）相关课程课件</li></ol><h2 id="目录">目录</h2><ol><li><a href="https://yg125.github.io/2022/06/25/csapp_1/">计算机系统漫游</a></li><li><a href="https://yg125.github.io/2022/06/25/csapp_2/">信息的表示和处理</a></li><li><a href="https://yg125.github.io/2022/06/25/csapp_3/">程序的机器级表示</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> CSAPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> 计算机组成原理 </tag>
            
            <tag> 计算机网络 </tag>
            
            <tag> 编译原理 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django_learning_6</title>
      <link href="/2022/06/23/django_learning6/"/>
      <url>/2022/06/23/django_learning6/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>web端AcWing一键登录</p>]]></content>
      
      
      <categories>
          
          <category> Django Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django_learning_5</title>
      <link href="/2022/06/21/django_learning5/"/>
      <url>/2022/06/21/django_learning5/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>创建了用户注册登录系统</p><h2 id="后台表创建">后台表创建</h2><p>Django虽然自带了用户系统，但我们希望能够让用户信息再加一个头像，这时候需要自行利用Django自带的库进行扩充。以下是信息扩充的步骤<br><code>acapp/game/models</code>是用于储存信息的，所以我们可以在这里面储存用户信息。<br>我们首先要定义一个数据表，首先进入<code>acapp/game/models/</code>创建一个<code>player</code>文件夹并进入，再创建py文件<code>__init__.py</code>和<code>player.py</code>，然后开始写<code>player.py</code>，用来存储<code>Player</code>这个数据表的信息。就相当于定义了一个SQL表，只不过是python中的类<br><code>player.py</code>示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用 Django 自带的基类扩充</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models <span class="comment"># 从django的数据库中引入models</span></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User <span class="comment"># 从django中引入这个基本的User类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Player</span>(models.Model): <span class="comment"># 要从models.Model这个类来继承</span></span><br><span class="line">    user = models.OneToOneField(User, on_delete = models.CASCADE) <span class="comment"># Player从User扩充，这里是定义一个扩充关系，代表Player都有唯一对应的User，User就是代表User数据表，on_delete代表删除User的时候，把他对应的Player也删掉</span></span><br><span class="line">    photo = models.URLField(max_length = <span class="number">256</span>, blank = <span class="literal">True</span>) <span class="comment"># 代表头像的URL，max_length是链接最大长度，blank是是否可空</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>): <span class="comment"># 返回一个对象的描述信息</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(self.user)</span><br></pre></td></tr></table></figure><p>如果我们希望要把这个数据表出现在我们后台的页面，我们就需要<strong>将这个数据表注册到管理员页面</strong><br>这时候进入到<code>acapp/game/</code>，在<code>admin.py</code>上加上两行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"><span class="keyword">from</span> game.models.player.player <span class="keyword">import</span> Player <span class="comment"># 引入自己定义的数据表 +</span></span><br><span class="line">admin.site.register(Player) <span class="comment"># 注册这个数据表 +</span></span><br></pre></td></tr></table></figure><p>我们在定义完一个数据表之后，<strong>需要将其更新到数据库</strong>，这时候我们需要执行两句话：<br><code>python3 manage.py makemigrations</code><br><code>python3 manage.py migrate</code><br><font color="red" size="3">完成之后进入管理员页面，会发现更新了一个新的数据表，然后可以自己创建这个新类型的对象了</font></p><h2 id="登录">登录</h2><p>流程大概是这样：</p><p>用户(Client)每次一刷新，就会先给后台服务器(Server)发送一个请求(Request):<code>getinfo</code>获取用户信息，然后后台就会返回一个响应(Response)，表示用户信息(用户名，头像)或者登录失败的响应</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">----------  Request   ----------</span><br><span class="line">|        |-----------&gt;|        |</span><br><span class="line">| Client |  Response  | Server |</span><br><span class="line">|        |&lt;-----------|        |</span><br><span class="line">----------            ----------</span><br></pre></td></tr></table></figure><p><font color="red">每一次写操作的时候都要考虑views，url，js</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> game.models.player.player <span class="keyword">import</span> Player</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getinfo</span>(<span class="params">request</span>): <span class="comment"># 每个处理请求的函数都要有这个参数&#x27;request&#x27; </span></span><br><span class="line">    user = request.user</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated: <span class="comment"># 没有登录</span></span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;未登录&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        player = Player.objects.<span class="built_in">all</span>()[<span class="number">0</span>] <span class="comment"># Player.objects是一个数组，代表Player数据表的所有元素的数组，这里为了测试就直接返回第一个人的信息，后面再实现找出这个用户</span></span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123; <span class="comment"># 返回Json</span></span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: player.user.username, <span class="comment"># 用户名</span></span><br><span class="line">        <span class="string">&#x27;photo&#x27;</span>: player.photo, <span class="comment"># 头像URL</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>接下来写路由，以调用这些逻辑。进入<code>game/urls/settings/index.py</code>  修改如下</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> game.views.settings.getinfo <span class="keyword">import</span> getinfo <span class="comment"># 引入上面写的getinfo函数</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;getinfo/&quot;</span>, getinfo, name = <span class="string">&quot;settings_getinfo&quot;</span>), <span class="comment"># 增加这个路由</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>现在我们访问网址<code>/settings/getinfo</code>，成功的话会显示有用户名和头像URL的信息</p><p>下面实现前端部分。我们进入<code>game/static/js/src/settings/zbase.js</code>，创建一个<code>class Settings</code><br>前端的代码非常多，主要是包括</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Settings</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">username</span> = <span class="string">&quot;&quot;</span>;  <span class="comment">// 储存用户名</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">photo</span> = <span class="string">&quot;&quot;</span>;     <span class="comment">// 储存头像</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$settings</span> = $(<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div class=&quot;ac-game-settings&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;ac-game-settings-login&quot;&gt;            //登录界面</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-title&quot;&gt;        //标题</span></span><br><span class="line"><span class="string">            登录</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-username&quot;&gt;     //用户名输入框</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt;    //输入处</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-password&quot;&gt;     //密码输入框</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;password&quot; placeholder=&quot;密码&quot;&gt;   //密码输入处</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-submit&quot;&gt;      //按钮</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;button&gt;登录&lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-error-message&quot;&gt;    //错误信息</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-option&quot;&gt;</span></span><br><span class="line"><span class="string">            注册</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;br&gt;    //这里一定要加上，不然一键登录图标不会居中，前面两行是inline的样式，可能会有bug</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-acwing&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img width=&quot;30&quot; src=&quot;https://app165.acapp.acwing.com.cn/static/image/settings/acwing_logo.png&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;br&gt;</span></span><br><span class="line"><span class="string">            &lt;div&gt;</span></span><br><span class="line"><span class="string">                AcWing一键登录</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &lt;div class=&quot;ac-game-settings-register&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-title&quot;&gt;</span></span><br><span class="line"><span class="string">            注册</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-username&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-password ac-game-settings-password-first&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;password&quot; placeholder=&quot;密码&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-password ac-game-settings-password-second&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;password&quot; placeholder=&quot;确认密码&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-submit&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;button&gt;注册&lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-error-message&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-option&quot;&gt;</span></span><br><span class="line"><span class="string">            登录</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;br&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-acwing&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img width=&quot;30&quot; src=&quot;https://app165.acapp.acwing.com.cn/static/image/settings/acwing_logo.png&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;br&gt;</span></span><br><span class="line"><span class="string">            &lt;div&gt;</span></span><br><span class="line"><span class="string">                AcWing一键登录</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>);          <span class="comment">// 生成settings的html对象</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login</span> = <span class="variable language_">this</span>.<span class="property">$settings</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-login&quot;</span>);  <span class="comment">// 登录界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login_username</span> = <span class="variable language_">this</span>.<span class="property">$login</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-username input&quot;</span>);   <span class="comment">//用户名输入框</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login_password</span> = <span class="variable language_">this</span>.<span class="property">$login</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-password input&quot;</span>);  <span class="comment">// 密码输入框</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login_submit</span> = <span class="variable language_">this</span>.<span class="property">$login</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-submit button&quot;</span>);     <span class="comment">// 提交按钮</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login_error_message</span> = <span class="variable language_">this</span>.<span class="property">$login</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-error-message&quot;</span>);<span class="comment">// 错误信息</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login_register</span> = <span class="variable language_">this</span>.<span class="property">$login</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-option&quot;</span>);          <span class="comment">// 注册选项</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login</span>.<span class="title function_">hide</span>();     <span class="comment">//隐藏登录界面</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register</span> = <span class="variable language_">this</span>.<span class="property">$settings</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-register&quot;</span>);   <span class="comment">//注册界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register_username</span> = <span class="variable language_">this</span>.<span class="property">$register</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-username input&quot;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register_password</span> = <span class="variable language_">this</span>.<span class="property">$register</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-password-first input&quot;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register_password_confirm</span> = <span class="variable language_">this</span>.<span class="property">$register</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-password-second input&quot;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register_submit</span> = <span class="variable language_">this</span>.<span class="property">$register</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-submit button&quot;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register_error_message</span> = <span class="variable language_">this</span>.<span class="property">$register</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-error-message&quot;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register_login</span> = <span class="variable language_">this</span>.<span class="property">$register</span>.<span class="title function_">find</span>(<span class="string">&quot;.ac-game-settings-option&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register</span>.<span class="title function_">hide</span>();   <span class="comment">//隐藏注册界面</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$ac_game</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$settings</span>);    <span class="comment">// 将这个html对象加入到ac_game    定义了这些html对象还需要修改game.css文件中的样式，这里不再赘述</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">getinfo</span>();   <span class="comment">// 一进入网页就要先获取信息</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">add_listening_events</span>();     <span class="comment">//绑定监听函数</span></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="title function_">add_listening_events</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">add_listening_events_login</span>();   <span class="comment">// 注册页面的监听</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">add_listening_events_register</span>();   <span class="comment">// 登陆页面的监听</span></span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="title function_">add_listening_events_login</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login_register</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;  <span class="comment">// 在登录页面点击注册选项就打开注册界面</span></span><br><span class="line">            outer.<span class="title function_">register</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login_submit</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            outer.<span class="title function_">login_on_remote</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">add_listening_events_register</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register_login</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;    <span class="comment">// 在注册页面点击登录选项就打开登录界面</span></span><br><span class="line">            outer.<span class="title function_">login</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register_submit</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            outer.<span class="title function_">register_on_remote</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">login_on_remote</span>(<span class="params"></span>) &#123;  <span class="comment">// 在远程服务器上登录</span></span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">let</span> username = <span class="variable language_">this</span>.<span class="property">$login_username</span>.<span class="title function_">val</span>();  <span class="comment">// 获取输入框中的用户名和密码</span></span><br><span class="line">        <span class="keyword">let</span> password = <span class="variable language_">this</span>.<span class="property">$login_password</span>.<span class="title function_">val</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login_error_message</span>.<span class="title function_">empty</span>();</span><br><span class="line"></span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;https://app165.acapp.acwing.com.cn/settings/login/&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">username</span>: username,   <span class="comment">//向login传输数据</span></span><br><span class="line">                <span class="attr">password</span>: password,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">resp</span>) &#123; <span class="comment">//从login返回的resp</span></span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(resp);</span><br><span class="line">                <span class="keyword">if</span> (resp.<span class="property">result</span> === <span class="string">&quot;success&quot;</span>) &#123;  <span class="comment">//如果成功了就刷新</span></span><br><span class="line">                    location.<span class="title function_">reload</span>();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    outer.<span class="property">$login_error_message</span>.<span class="title function_">html</span>(resp.<span class="property">result</span>);  <span class="comment">// 如果失败了就显示错误信息</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">register_on_remote</span>(<span class="params"></span>) &#123;  <span class="comment">// 在远程服务器上注册</span></span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">let</span> username = <span class="variable language_">this</span>.<span class="property">$register_username</span>.<span class="title function_">val</span>();</span><br><span class="line">        <span class="keyword">let</span> password = <span class="variable language_">this</span>.<span class="property">$register_password</span>.<span class="title function_">val</span>();</span><br><span class="line">        <span class="keyword">let</span> password_confirm = <span class="variable language_">this</span>.<span class="property">$register_password_confirm</span>.<span class="title function_">val</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register_error_message</span>.<span class="title function_">empty</span>();</span><br><span class="line"></span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;https://app165.acapp.acwing.com.cn/settings/register/&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">username</span>: username,</span><br><span class="line">                <span class="attr">password</span>: password,</span><br><span class="line">                <span class="attr">password_confirm</span>: password_confirm,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">resp</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(resp);</span><br><span class="line">                <span class="keyword">if</span> (resp.<span class="property">result</span> === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                    location.<span class="title function_">reload</span>();  <span class="comment">// 刷新页面</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    outer.<span class="property">$register_error_message</span>.<span class="title function_">html</span>(resp.<span class="property">result</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">logout_on_remote</span>(<span class="params"></span>) &#123;  <span class="comment">// 在远程服务器上登出</span></span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;https://app165.acapp.acwing.com.cn/settings/logout/&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">resp</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(resp);  <span class="comment">//测试输出</span></span><br><span class="line">                <span class="keyword">if</span> (resp.<span class="property">result</span> === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                    location.<span class="title function_">reload</span>();    <span class="comment">// 如果成功了就直接刷新</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">register</span>(<span class="params"></span>) &#123;  <span class="comment">// 打开注册界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login</span>.<span class="title function_">hide</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">login</span>(<span class="params"></span>) &#123;  <span class="comment">// 打开登录界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$register</span>.<span class="title function_">hide</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$login</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getinfo</span>(<span class="params"></span>) &#123; <span class="comment">// 获取信息</span></span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line"></span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;  <span class="comment">// 发送一个请求</span></span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;https://app165.acapp.acwing.com.cn/settings/getinfo/&quot;</span>,<span class="comment">// 获取信息的URL</span></span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">platform</span>: outer.<span class="property">platform</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">resp</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (resp.<span class="property">result</span> === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                    outer.<span class="property">username</span> = resp.<span class="property">username</span>;</span><br><span class="line">                    outer.<span class="property">photo</span> = resp.<span class="property">photo</span>;</span><br><span class="line">                    outer.<span class="title function_">hide</span>(); <span class="comment">//如果成功登录，隐藏登录界面</span></span><br><span class="line">                    outer.<span class="property">root</span>.<span class="property">menu</span>.<span class="title function_">show</span>();  <span class="comment">// 并显示游戏菜单</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    outer.<span class="title function_">login</span>();<span class="comment">// 如果没有登录就打开这个登录页面</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">hide</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$settings</span>.<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$settings</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在实现了登陆页面和注册页面之后，处理<strong>后端的登录和注册逻辑</strong><br>首先实现登录<br>创建<code>game/views/settings/login.py</code>，实现登录，代码如下</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> authenticate, login</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">signin</span>(<span class="params">request</span>):</span><br><span class="line">    data = request.GET      <span class="comment"># 获取请求的信息</span></span><br><span class="line">    username = data.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    password = data.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">    user = authenticate(username=username, password=password)  <span class="comment"># 从数据库中查找这个用户</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;用户名或密码不正确&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    login(request, user)    <span class="comment"># 找到了就登录，python内置函数</span></span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>创建<code>game/views/settings/logout.py</code>，实现登出，代码如下</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> logout</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">signout</span>(<span class="params">request</span>):</span><br><span class="line">    user = request.user</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    logout(request)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>由于登出操作是在菜单<code>menu</code>界面中执行，所以需要在<code>menu/zbase.js</code>中修改监听函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGameMenu</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">hide</span>();     <span class="comment">// +</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$settings</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;click settings&quot;</span>);</span><br><span class="line">            outer.<span class="property">root</span>.<span class="property">settings</span>.<span class="title function_">logout_on_remote</span>();  <span class="comment">// +</span></span><br><span class="line">        &#125;);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现注册,创建<code>game/views/settings/register.py</code>并进去，代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.<span class="property">http</span> <span class="keyword">import</span> <span class="title class_">JsonResponse</span></span><br><span class="line"><span class="keyword">from</span> django.<span class="property">contrib</span>.<span class="property">auth</span> <span class="keyword">import</span> login</span><br><span class="line"><span class="keyword">from</span> django.<span class="property">contrib</span>.<span class="property">auth</span>.<span class="property">models</span> <span class="keyword">import</span> <span class="title class_">User</span></span><br><span class="line"><span class="keyword">from</span> game.<span class="property">models</span>.<span class="property">player</span>.<span class="property">player</span> <span class="keyword">import</span> <span class="title class_">Player</span></span><br><span class="line"></span><br><span class="line">def <span class="title function_">register</span>(request):</span><br><span class="line">    data = request.<span class="property">GET</span></span><br><span class="line">    username = data.<span class="title function_">get</span>(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">strip</span>()</span><br><span class="line">    password = data.<span class="title function_">get</span>(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">strip</span>()</span><br><span class="line">    password_confirm = data.<span class="title function_">get</span>(<span class="string">&quot;password_confirm&quot;</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">strip</span>()</span><br><span class="line">    <span class="keyword">if</span> not username or not <span class="attr">password</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">JsonResponse</span>(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;用户名和密码不能为空&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">if</span> password != <span class="attr">password_confirm</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">JsonResponse</span>(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;两个密码不一致&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">if</span> <span class="title class_">User</span>.<span class="property">objects</span>.<span class="title function_">filter</span>(username=username).<span class="title function_">exists</span>():</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">JsonResponse</span>(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;用户名已存在&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    user = <span class="title class_">User</span>(username=username)</span><br><span class="line">    user.<span class="title function_">set_password</span>(password)</span><br><span class="line">    user.<span class="title function_">save</span>()</span><br><span class="line">    <span class="title class_">Player</span>.<span class="property">objects</span>.<span class="title function_">create</span>(user=user, photo=<span class="string">&quot;默认头像URL&quot;</span>)</span><br><span class="line">    <span class="title function_">login</span>(request, user)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">JsonResponse</span>(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>将实现的四个视图函数加入到<code>url</code>中，在<code>game/urls/settings/index.py</code>中添加代码如下</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> game.views.settings.getinfo <span class="keyword">import</span> getinfo</span><br><span class="line"><span class="keyword">from</span> game.views.settings.login <span class="keyword">import</span> signin</span><br><span class="line"><span class="keyword">from</span> game.views.settings.logout <span class="keyword">import</span> signout</span><br><span class="line"><span class="keyword">from</span> game.views.settings.register <span class="keyword">import</span> register</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;getinfo/&quot;</span>, getinfo, name=<span class="string">&quot;settings_getinfo&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;login/&quot;</span>, signin, name=<span class="string">&quot;settings_login&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;logout/&quot;</span>, signout, name=<span class="string">&quot;settings_logout&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;register/&quot;</span>, register, name=<span class="string">&quot;settings_register&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>注意，创建settings模块之前一定要修改主模块AcGame，加入其中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AcGame</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">settings</span> = <span class="keyword">new</span> <span class="title class_">Settings</span>(<span class="variable language_">this</span>); <span class="comment">// +</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django_learning_4</title>
      <link href="/2022/06/21/django_learning4/"/>
      <url>/2022/06/21/django_learning4/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>完成了nginx部署以及acapp对接</p><h2 id="增加容器的映射端口：80与443">增加容器的映射端口：80与443</h2><ol><li>登录容器，关闭所有运行中的任务</li><li>登录运行容器的服务器，然后执行 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker commit CONTAINER_NAME django_lesson:1.1  <span class="comment"># 将容器保存成镜像，将CONTAINER_NAME替换成容器名称</span></span><br><span class="line">docker stop CONTAINER_NAME  <span class="comment"># 关闭容器</span></span><br><span class="line">docker <span class="built_in">rm</span> CONTAINER_NAME <span class="comment"># 删除容器</span></span><br><span class="line"><span class="comment"># 使用保存的镜像重新创建容器</span></span><br><span class="line">docker run -p 20000:22 -p 8000:8000 -p 80:80 -p 443:443 --name CONTAINER_NAME -itd django_lesson:1.1</span><br></pre></td></tr></table></figure></li><li>去云服务器控制台，在安全组配置中开放80和443端口（通常已经默认开发）</li></ol><h2 id="创建acapp-获取域名-nginx配置文件及https证书">创建AcApp，获取域名、nginx配置文件及https证书</h2><ol><li><p>将nginx.conf中的内容写入<code>/etc/nginx/nginx.conf</code>文件中。如果django项目路径与配置文件中不同，注意修改路径<br>将acapp.key中的内容写入<code>/etc/nginx/cert/acapp.key</code>文件中<br>将acapp.pem中的内容写入<code>/etc/nginx/cert/acapp.pem</code>文件中<br>然后启动nginx服务：<code>sudo /etc/init.d/nginx start</code></p></li><li><p>修改django项目的配置</p><ul><li>打开<code>settings.py</code>文件：<ul><li>将分配的域名添加到<code>ALLOWED_HOSTS</code>列表中。注意只需要添加<code>https://</code> 后面的部分。</li><li>令<code>DEBUG = False</code></li></ul></li><li>归档<code>static</code>文件：<ul><li><code>python3 manage.py collectstatic</code></li></ul></li></ul></li><li><p>配置uwsgi</p><ul><li>在django项目中添加uwsgi的配置文件：<code>scripts/uwsgi.ini</code>，内容如下：</li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line">socket          = 127.0.0.1:8000</span><br><span class="line">chdir           = /home/yangang/acapp</span><br><span class="line">wsgi-file       = acapp/wsgi.py</span><br><span class="line">master          = true</span><br><span class="line">processes       = 2</span><br><span class="line">threads         = 5</span><br><span class="line">vacuum          = true</span><br></pre></td></tr></table></figure><p>启动uwsgi服务：<code>uwsgi --ini scripts/uwsgi.ini</code></p></li></ol><p>需要在项目根目录下执行<code>python3 manage.py collectstatic</code>命令<br>也就是在项目根目录下归档<code>static</code>文件夹<br>由于每次修改之后都需要归档，类似每次修改src中的js文件之后都需要执行脚本文件归档到dist的game.js中一样，可以在脚本文件中加入<code>echo yes | python3 manage.py collectstatic</code><br>这样在执行脚本的时候就可以一起执行了（此时须在项目根目录下执行脚本命令<code>./scripts/compress_game_js.sh</code>）</p><p>由于添加域名，需要修改的文件如下</p><p><code>settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = <span class="literal">False</span> <span class="comment"># +</span></span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">&quot;47.100.238.236&quot;</span>, <span class="string">&quot;app152.acapp.acwing.com.cn&quot;</span>]  <span class="comment"># +</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>css/game.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.ac-game-menu-field</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20vw</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">40%</span>; <span class="comment">/* + */</span></span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20%</span>; <span class="comment">/* + */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ac-game-menu-field-item</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">6vh</span>; <span class="comment">/* + */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">18vw</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">4vh</span>;  <span class="comment">/* + */</span></span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>playground/zbase.js</code>开始时隐藏，计算画布大小在点击游戏界面才开始，于是交换了一下代码顺序</p>]]></content>
      
      
      <categories>
          
          <category> Django Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django_learning_3</title>
      <link href="/2022/06/20/django_leaning3/"/>
      <url>/2022/06/20/django_leaning3/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>本次完成了playground界面的创建</p><h3 id="游戏界面基本搭建">游戏界面基本搭建</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGamePlayground</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span> = $(<span class="string">`&lt;div class=&quot;ac-game-playground&quot;&gt;&lt;/div&gt;`</span>); <span class="comment">//定义了新的HTML类</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// this.hide();</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$ac_game</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$playground</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">width</span>(); <span class="comment">//领域的宽度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">height</span>(); <span class="comment">//领域的高度</span></span><br><span class="line">        <span class="comment">//创建地图（canvas）</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">game_map</span> = <span class="keyword">new</span> <span class="title class_">GameMap</span>(<span class="variable language_">this</span>);</span><br><span class="line">        <span class="comment">//创建玩家</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">players</span> = [];</span><br><span class="line">        <span class="comment">//创建自己 玩家默认白色</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">players</span>.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Player</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>.<span class="property">width</span> / <span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">height</span> / <span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">height</span> * <span class="number">0.05</span>, <span class="string">&quot;white&quot;</span>, <span class="variable language_">this</span>.<span class="property">height</span> * <span class="number">0.15</span>, <span class="literal">true</span>));</span><br><span class="line">        <span class="comment">//创建AI AI随机颜色</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">players</span>.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Player</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>.<span class="property">width</span> / <span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">height</span> / <span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">height</span> * <span class="number">0.05</span>, <span class="variable language_">this</span>.<span class="title function_">get_random_color</span>(), <span class="variable language_">this</span>.<span class="property">height</span> * <span class="number">0.15</span>, <span class="literal">false</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">get_random_color</span>(<span class="params"></span>) &#123; <span class="comment">// 产生随机颜色</span></span><br><span class="line">        <span class="keyword">let</span> colors = [<span class="string">&quot;blue&quot;</span>, <span class="string">&quot;red&quot;</span>, <span class="string">&quot;pink&quot;</span>, <span class="string">&quot;grey&quot;</span>, <span class="string">&quot;green&quot;</span>];</span><br><span class="line">        <span class="keyword">return</span> colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span>)];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">show</span>(<span class="params"></span>) &#123; <span class="comment">// 打开playground界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">hide</span>(<span class="params"></span>) &#123; <span class="comment">// 关闭playground界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于定义了新的HTML类，在使用的时候需要为其添加css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.ac-game-playground</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>; <span class="comment">/* 宽度 */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>; <span class="comment">/* 高度 */</span></span><br><span class="line">    user-select: none; <span class="comment">/* 禁用右键弹菜单 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现动画效果">实现动画效果</h3><p>首先要了解动画的基本原理，切换图片的频率高于人眼识别的频率，人眼上看就像是动态的。<br>那么这个动态的东西（对象），我们可以定义为<code>AcGameObject</code>，这个就是可以“动”的东西。可以作为以后可以“动”的对象的基类。所以我们在<code>js/src/playground/</code>创建<code>ac_game_object/zbase.js</code>。定义<code>AcGameObject</code>类。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable constant_">AC_GAME_OBJECTS</span> = []; <span class="comment">// 存储所有可移动的对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>); <span class="comment">// 在构造函数中就将这个对象加入到储存动元素的全局数组里</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">has_called_start</span> = <span class="literal">false</span>; <span class="comment">// 记录这个对象是否执行过start函数</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timedelta</span> = <span class="number">0</span>; <span class="comment">// 当前距离上一帧的时间间隔</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123; <span class="comment">// 只会在第一帧执行一次</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123; <span class="comment">// 每一帧均会执行一次</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">on_destroy</span>(<span class="params"></span>) &#123; <span class="comment">// 在被销毁前执行一次</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">destroy</span>(<span class="params"></span>) &#123; <span class="comment">// 删掉该物体</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">on_destroy</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable constant_">AC_GAME_OBJECTS</span>[i] === <span class="variable language_">this</span>) &#123;</span><br><span class="line">                <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="title function_">splice</span>(i, <span class="number">1</span>); <span class="comment">// js中从数组中删除元素的函数splice()</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> last_timestamp; <span class="comment">// 上一帧的时间</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">AC_GAME_ANIMATION</span> = <span class="keyword">function</span>(<span class="params">timestamp</span>) &#123; <span class="comment">// timestamp 是传入的一个参数，就是当前调用的时间</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="property">length</span>; i++) <span class="comment">// 所有动的元素都进行更新。</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">let</span> obj = <span class="variable constant_">AC_GAME_OBJECTS</span>[i];</span><br><span class="line">        <span class="keyword">if</span> (!obj.<span class="property">has_called_start</span>) <span class="comment">//如果还没有执行过start那么执行</span></span><br><span class="line">        &#123;</span><br><span class="line">            obj.<span class="title function_">start</span>();</span><br><span class="line">            obj.<span class="property">has_called_start</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            obj.<span class="property">timedelta</span> = timestamp - last_timestamp;</span><br><span class="line">            obj.<span class="title function_">update</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    last_timestamp = timestamp; <span class="comment">// 更新上一帧变量时间戳</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(<span class="variable constant_">AC_GAME_ANIMATION</span>); <span class="comment">// 不断递归调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">requestAnimationFrame</span>(<span class="variable constant_">AC_GAME_ANIMATION</span>); <span class="comment">// JS的API，可以调用1帧里面的函数。</span></span><br></pre></td></tr></table></figure><h4 id="描绘游戏地图">描绘游戏地图</h4><p>接下来写游戏地图<code>GameMap</code>，这个地图也是会随时更新的“动”的元素，所以要用<code>AcGameObject</code>。<strong>以后会动的元素都以AcGameObject为基类</strong>。在<code>js/src/playground/game_map/zbase.js</code>。<br>我们用<code>HTML</code>里面的<code>canvas</code>画布渲染。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//GameMap是由基类AcGameObject扩展的，类似于继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GameMap</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">playground</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(); <span class="comment">// 调用基类的构造函数</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = playground; <span class="comment">// 这个playground是属于这个Map的</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$canvas</span> = $(<span class="string">`&lt;canvas&gt;&lt;/canvas&gt;`</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">$canvas</span>[<span class="number">0</span>].<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>); <span class="comment">// 用ctx操作画布canvas</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">width</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span>; <span class="comment">//设置画布的高度及宽度</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">$playground</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$canvas</span>); <span class="comment">// 将这个画布加入到这个playground</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>(); <span class="comment">// 这个地图要一直画一直画（动画的基本原理）</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">fillStyle</span> = <span class="string">&quot;rgba(0, 0, 0, 0.2)&quot;</span>; <span class="comment">// 填充颜色设置为黑色</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">width</span>, <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">height</span>); <span class="comment">// 画上给定的坐标的矩形</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="玩家类">玩家类</h4><p>玩家也是可以“动”的对象，所以也继承于<code>AcGameObject</code>类，定义Player类</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Player</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">playground, x, y, radius, color, speed, is_me</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = playground; <span class="comment">//所属 playground</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">ctx</span>; <span class="comment">// 操作的画笔</span></span><br><span class="line">        <span class="comment">//由传入的参数设置坐标半径颜色速度身份等信息</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">radius</span> = radius;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">color</span> = color;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> = speed;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">is_me</span> = is_me;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_x</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_y</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_speed</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eps</span> = <span class="number">0.1</span>; <span class="comment">//精度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">friction</span> = <span class="number">0.9</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">spent_time</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cur_skill</span> = <span class="literal">null</span>; <span class="comment">//当前选中的技能</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">is_me</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">add_listening_events</span>(); <span class="comment">// 只有这个玩家是自己的时候才能加入监听</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> tx = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">width</span>;</span><br><span class="line">            <span class="keyword">let</span> ty = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">move_to</span>(tx, ty);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">add_listening_events</span>(<span class="params"></span>) &#123; <span class="comment">//加入监听</span></span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>; <span class="comment">// 设置正确的this指针，因为接下来的后面的function内的this不是对象本身的this</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">$canvas</span>.<span class="title function_">on</span>(<span class="string">&quot;contextmenu&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="comment">// 关闭画布上的鼠标监听右键</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">$canvas</span>.<span class="title function_">mousedown</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123; <span class="comment">// 鼠标监听</span></span><br><span class="line">            <span class="keyword">if</span> (e.<span class="property">which</span> === <span class="number">3</span>) &#123; <span class="comment">// e.which就是canvas中的鼠标右键，详情查看canvas</span></span><br><span class="line">                outer.<span class="title function_">move_to</span>(e.<span class="property">clientX</span>, e.<span class="property">clientY</span>); <span class="comment">// e.clientX是鼠标的x坐标，e.clientY同理</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.<span class="property">which</span> === <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (outer.<span class="property">cur_skill</span> === <span class="string">&quot;fireball&quot;</span>) &#123; <span class="comment">//当前技能是火球就发射</span></span><br><span class="line">                    outer.<span class="title function_">shoot_fireball</span>(e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                outer.<span class="property">cur_skill</span> = <span class="literal">null</span>; <span class="comment">//使用之后就需要清空</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        $(<span class="variable language_">window</span>).<span class="title function_">keydown</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.<span class="property">which</span> === <span class="number">81</span>) &#123; <span class="comment">// q</span></span><br><span class="line">                outer.<span class="property">cur_skill</span> = <span class="string">&quot;fireball&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">shoot_fireball</span>(<span class="params">tx, ty</span>) &#123; <span class="comment">//发射火球</span></span><br><span class="line">        <span class="keyword">let</span> x = <span class="variable language_">this</span>.<span class="property">x</span>,</span><br><span class="line">            y = <span class="variable language_">this</span>.<span class="property">y</span>;</span><br><span class="line">        <span class="keyword">let</span> radius = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span> * <span class="number">0.01</span>;</span><br><span class="line">        <span class="keyword">let</span> angle = <span class="title class_">Math</span>.<span class="title function_">atan2</span>(ty - <span class="variable language_">this</span>.<span class="property">y</span>, tx - <span class="variable language_">this</span>.<span class="property">x</span>);</span><br><span class="line">        <span class="keyword">let</span> vx = <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle),</span><br><span class="line">            vy = <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle);</span><br><span class="line">        <span class="keyword">let</span> color = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> speed = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span> * <span class="number">0.5</span>;</span><br><span class="line">        <span class="keyword">let</span> move_length = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span> * <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">FireBall</span>(<span class="variable language_">this</span>.<span class="property">playground</span>, <span class="variable language_">this</span>, x, y, radius, vx, vy, color, speed, move_length, <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span> * <span class="number">0.01</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">get_dist</span>(<span class="params">x1, y1, x2, y2</span>) &#123; <span class="comment">//获取两点之间的距离</span></span><br><span class="line">        <span class="keyword">let</span> dx = x1 - x2;</span><br><span class="line">        <span class="keyword">let</span> dy = y1 - y2;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(dx * dx + dy * dy);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">move_to</span>(<span class="params">tx, ty</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> = <span class="variable language_">this</span>.<span class="title function_">get_dist</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>, tx, ty); <span class="comment">// 跟目的地的距离</span></span><br><span class="line">        <span class="keyword">let</span> angle = <span class="title class_">Math</span>.<span class="title function_">atan2</span>(ty - <span class="variable language_">this</span>.<span class="property">y</span>, tx - <span class="variable language_">this</span>.<span class="property">x</span>); <span class="comment">// 计算角度，这里Math.atan2(y, x)相当于求arctan(y / x);</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle); <span class="comment">// vx是这个速度的x方向上的速度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle); <span class="comment">// vy是这个速度的y方向上的速度</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">is_attacked</span>(<span class="params">angle, damage</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>; i++) &#123; <span class="comment">//粒子数</span></span><br><span class="line">            <span class="keyword">let</span> x = <span class="variable language_">this</span>.<span class="property">x</span>,</span><br><span class="line">                y = <span class="variable language_">this</span>.<span class="property">y</span>;</span><br><span class="line">            <span class="keyword">let</span> radius = <span class="variable language_">this</span>.<span class="property">radius</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.1</span>;</span><br><span class="line">            <span class="keyword">let</span> angle = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>(); <span class="comment">//随机方向</span></span><br><span class="line">            <span class="keyword">let</span> vx = <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle),</span><br><span class="line">                vy = <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle);</span><br><span class="line">            <span class="keyword">let</span> color = <span class="variable language_">this</span>.<span class="property">color</span>;</span><br><span class="line">            <span class="keyword">let</span> speed = <span class="variable language_">this</span>.<span class="property">speed</span> * <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">let</span> move_length = <span class="variable language_">this</span>.<span class="property">radius</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span>;</span><br><span class="line">            <span class="comment">//创建粒子对象</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Particle</span>(<span class="variable language_">this</span>.<span class="property">playground</span>, x, y, radius, vx, vy, color, speed, move_length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">radius</span> -= damage;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">radius</span> &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">destroy</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_x</span> = <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_y</span> = <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_speed</span> = damage * <span class="number">100</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> *= <span class="number">0.8</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">spent_time</span> += <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>; <span class="comment">//冷静期 AI不能攻击</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">is_me</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">spent_time</span> &gt; <span class="number">4</span> &amp;&amp; <span class="title class_">Math</span>.<span class="title function_">random</span>() &lt; <span class="number">1</span> / <span class="number">300.0</span>) &#123; <span class="comment">//过了冷静期每隔一段时间发射一次</span></span><br><span class="line">            <span class="keyword">let</span> player = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>.<span class="property">length</span>)];</span><br><span class="line">            <span class="keyword">let</span> tx = player.<span class="property">x</span> + player.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">vx</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span> * <span class="number">0.3</span>;</span><br><span class="line">            <span class="keyword">let</span> ty = player.<span class="property">y</span> + player.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">vy</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span> * <span class="number">0.3</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">shoot_fireball</span>(tx, ty);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">damage_speed</span> &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">move_length</span> = <span class="number">0</span>; <span class="comment">//不能自己动</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">damage_x</span> * <span class="variable language_">this</span>.<span class="property">damage_speed</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>; <span class="comment">//被击退的移动</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">damage_y</span> * <span class="variable language_">this</span>.<span class="property">damage_speed</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">damage_speed</span> *= <span class="variable language_">this</span>.<span class="property">friction</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">move_length</span> &lt; <span class="variable language_">this</span>.<span class="property">eps</span>) &#123; <span class="comment">// 移动距离小于精度</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">move_length</span> = <span class="number">0</span>; <span class="comment">//停止</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">is_me</span>) &#123; <span class="comment">//如果是AI，那么随机移动</span></span><br><span class="line">                    <span class="keyword">let</span> tx = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">width</span>;</span><br><span class="line">                    <span class="keyword">let</span> ty = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">move_to</span>(tx, ty);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果是玩家自己并且移动距离有效，继续移动</span></span><br><span class="line">                <span class="keyword">let</span> moved = <span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="variable language_">this</span>.<span class="property">move_length</span>, <span class="variable language_">this</span>.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>); <span class="comment">// 每个时间微分里该走的距离和到目的地的距离的最小值</span></span><br><span class="line">                <span class="comment">// 注意：this.timedelta 的单位是毫秒，所以要 / 1000 转换单位为秒</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span> * moved;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span> * moved;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">move_length</span> -= moved;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>(); <span class="comment">//一直画圆</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123; <span class="comment">//画圆</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">beginPath</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>, <span class="variable language_">this</span>.<span class="property">radius</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">fillStyle</span> = <span class="variable language_">this</span>.<span class="property">color</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">fill</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">on_destroy</span>(<span class="params"></span>) &#123; <span class="comment">//销毁之前在保存玩家的数组中删去这个player</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>[i] === <span class="variable language_">this</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来技能类，发射火球。在<code>playground</code>下创建<code>skill/fireball/zbase.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FireBall</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">playground, player, x, y, radius, vx, vy, color, speed, move_length, damage</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = playground;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">player</span> = player;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">ctx</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vx</span> = vx; <span class="comment">//移动方向</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vy</span> = vy;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">radius</span> = radius; <span class="comment">//半径</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">color</span> = color;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> = speed; <span class="comment">//速度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> = move_length; <span class="comment">//射程</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage</span> = damage;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eps</span> = <span class="number">0.1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">move_length</span> &lt; <span class="variable language_">this</span>.<span class="property">eps</span>) &#123; <span class="comment">//如果走完了射程就消失</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">destroy</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> moved = <span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="variable language_">this</span>.<span class="property">move_length</span>, <span class="variable language_">this</span>.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span> * moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span> * moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> -= moved;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> player = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>[i];</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">player</span> !== player &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">is_collision</span>(player)) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">attack</span>(player);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">get_dist</span>(<span class="params">x1, y1, x2, y2</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> dx = x1 - x2;</span><br><span class="line">        <span class="keyword">let</span> dy = y1 - y2;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(dx * dx + dy * dy);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">is_collision</span>(<span class="params">player</span>) &#123; <span class="comment">//两圆相交判断是否碰撞</span></span><br><span class="line">        <span class="keyword">let</span> distance = <span class="variable language_">this</span>.<span class="title function_">get_dist</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>, player.<span class="property">x</span>, player.<span class="property">y</span>);</span><br><span class="line">        <span class="keyword">if</span> (distance &lt; <span class="variable language_">this</span>.<span class="property">radius</span> + player.<span class="property">radius</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">attack</span>(<span class="params">player</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> angle = <span class="title class_">Math</span>.<span class="title function_">atan2</span>(player.<span class="property">y</span> - <span class="variable language_">this</span>.<span class="property">y</span>, player.<span class="property">x</span> - <span class="variable language_">this</span>.<span class="property">x</span>);</span><br><span class="line">        player.<span class="title function_">is_attacked</span>(angle, <span class="variable language_">this</span>.<span class="property">damage</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">destroy</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123; <span class="comment">//画圆</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">beginPath</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>, <span class="variable language_">this</span>.<span class="property">radius</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">fillStyle</span> = <span class="variable language_">this</span>.<span class="property">color</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">fill</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了让碰撞看起来比较有打击感，我们可以加一个被伤害之后就喷射一些小粒子的效果。首先定义粒子类，创建<code>game/static/js/src/playground/animation/particle/zbase.js</code>，代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Particle</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">playground, x, y, radius, vx, vy, color, speed, move_length</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = playground;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">ctx</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">radius</span> = radius;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vx</span> = vx;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vy</span> = vy;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">color</span> = color;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> = speed;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> = move_length;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">friction</span> = <span class="number">0.9</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eps</span> = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">move_length</span> &lt; <span class="variable language_">this</span>.<span class="property">eps</span> || <span class="variable language_">this</span>.<span class="property">speed</span> &lt; <span class="variable language_">this</span>.<span class="property">eps</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">destroy</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> moved = <span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="variable language_">this</span>.<span class="property">move_length</span>, <span class="variable language_">this</span>.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span> * moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span> * moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> *= <span class="variable language_">this</span>.<span class="property">friction</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> -= moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">beginPath</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>, <span class="variable language_">this</span>.<span class="property">radius</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">fillStyle</span> = <span class="variable language_">this</span>.<span class="property">color</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">fill</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>playground</code>文件夹外层<code>src/zbase.js</code>是总的<code>src</code>的<code>js</code>文件，即定义了包含<code>menu</code>，<code>playground</code>，<code>settints</code>的<code>js</code>逻辑，也就是new了一个<code>AcGamePlayground</code>对象.<br><code>playground</code>文件夹的组织形式如下，最外层的zbase.js可以调用里面的所有，故它就只是一个大类<code>AcGamePlayground</code>,<code>ac_game_object</code>中定义了可以动的基类<code>AcGameObject</code>所有可移动的类如玩家，火球，地图都继承它。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- ac_game_object</span><br><span class="line">|   `-- zbash.js`</span><br><span class="line">|-- game_map</span><br><span class="line">|   `-- zbase.js`</span><br><span class="line">|-- particle</span><br><span class="line">|   `-- zbase.js`</span><br><span class="line">|-- player</span><br><span class="line">|   `-- zbase.js`</span><br><span class="line">|-- skill</span><br><span class="line">|   -- fireball</span><br><span class="line">|       `-- zbase.js`</span><br><span class="line">`-- zbase.js`</span><br></pre></td></tr></table></figure><p><strong>代码量较多，逻辑部分参考注释</strong></p>]]></content>
      
      
      <categories>
          
          <category> Django Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django_learning_2</title>
      <link href="/2022/06/19/django_learning2/"/>
      <url>/2022/06/19/django_learning2/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>本次完成了项目的基本框架搭建以及菜单界面的前端</p><h2 id="1-项目基本框架">1. 项目基本框架</h2><p>项目框架设计</p><ul><li><code>menu</code>：菜单页面</li><li><code>playground</code>：游戏界面</li><li><code>settings</code>：设置界面<br>由于项目被分成了三个部分，在之后的实现过程中也最好在每个目录划分这三个部分</li></ul><p>项目文件结构</p><ul><li><code>templates</code>目录：管理html文件</li><li><code>urls</code>目录：管理路由，即链接与函数的对应关系</li><li><code>views</code>目录：管理http函数</li><li><code>models</code>目录：管理数据库数据</li><li><code>static</code>目录：管理静态文件，比如：<ul><li><code>css</code>：对象的格式，比如位置、长宽、颜色、背景、字体大小等</li><li><code>js</code>：对象的逻辑，比如对象的创建与销毁、事件函数、移动、变色等</li><li><code>image</code>：图片</li><li><code>audio</code>：声音<br>…</li></ul></li><li><code>consumers</code>目录：管理websocket函数</li></ul><h3 id="1-1-具体过程">1.1 具体过程</h3><p>由于项目可能包含的链接很多，函数很多所以一般以文件夹来管理<br>将第一次创建的game/urls.py game/views.py game/models.py删除并用文件夹表示，并创建game/static文件夹<br>在python文件中如果想通过import的话需要在文件夹中创建__init__.py文件<br>于是在game/urls game/models game/views 中创建__init__.py文件</p><p>需要将创建的app也就是game添加到settings中</p><blockquote><p>在game/apps.py中的内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.apps <span class="keyword">import</span> AppConfig</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GameConfig</span>(<span class="title class_ inherited__">AppConfig</span>):</span><br><span class="line">    default_auto_field = <span class="string">&#x27;django.db.models.BigAutoField&#x27;</span></span><br><span class="line">    name = <span class="string">&#x27;game&#x27;</span></span><br></pre></td></tr></table></figure><p>在settings.py中需要修改如下内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">  <span class="string">&#x27;game.apps.GameConfig&#x27;</span>,</span><br></pre></td></tr></table></figure></blockquote><p>还需要将settings.py中修改static和media路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">STATIC_ROOT = os.path.join(BASE_DIR,<span class="string">&#x27;static&#x27;</span>)</span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line"></span><br><span class="line">MEIDA_ROOT = os.path.join(BASE_DIR,<span class="string">&#x27;media&#x27;</span>)</span><br><span class="line">MEDIA_URL = <span class="string">&#x27;/media/&#x27;</span></span><br></pre></td></tr></table></figure><p>在static文件夹下创建<code>css</code>,<code>js</code>,<code>image</code>文件夹,在image下创建<code>menu</code>,<code>playground</code>,<code>settings</code>三个文件夹，分别存储三个部分的图片<br><strong>由于设置了static路径，所以可以直接114.132.67.106:8000/static进入static目录</strong>，也可以114.132.67.106:8000/static/image访问图片<br>css文件夹中通常一个css文件即可<br>由于使用的js文件可能很多也很混乱，所以在js文件夹下创建dist和src文件夹,dist文件夹存放最终使用的js文件，src存放所有的js文件,可以理解为dist文件夹中存放着src中的合集。<br>在js/src中创建<code>menu</code>,<code>playground</code>,<code>settings</code>三个文件夹,保存三个部分的js,并在js/src目录下创建总的zbase.js文件,其中zbase.js会调用<code>menu</code>,<code>playground</code>,<code>settings</code>文件中的js内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Ac_Game</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>此处，在总目录下创建了scripts文件夹用来存放项目的所有的脚本文件<br>首先创建了第一个简易的脚本文件<code>compress_game_js.sh</code>,用来将src中的js文件整合并放入dist文件夹下。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">JS_PATH=/home/yangang/acapp/game/static/js/</span><br><span class="line">JS_PATH_DIST=<span class="variable">$&#123;JS_PATH&#125;</span>dist/</span><br><span class="line">JS_PATH_SRC=<span class="variable">$&#123;JS_PATH&#125;</span>src/</span><br><span class="line"></span><br><span class="line">find <span class="variable">$JS_PATH_SRC</span> -<span class="built_in">type</span> f -name <span class="string">&#x27;*.js&#x27;</span> | <span class="built_in">sort</span> | xargs <span class="built_in">cat</span> &gt; <span class="variable">$&#123;JS_PATH_DIST&#125;</span>game.js</span><br><span class="line"><span class="comment"># 将src所有的js打包存入dist/game.js中</span></span><br></pre></td></tr></table></figure><p>在templates文件夹中创建<code>menu</code>,<code>playground</code>,<code>settings</code>和<code>multiends</code>四个文件夹，<code>multiends</code>用于多终端显示，并在其中创建<code>web.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用jquery渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.acwing.com/static/jquery-ui-dist/jquery-ui.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.acwing.com/static/jquery/js/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;css/game.css&#x27; %&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用自己写的css和js文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;margin: 0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ac_game_12345678&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">import</span> &#123;<span class="title class_">AcGame</span>&#125; <span class="keyword">from</span> <span class="string">&quot;&#123;% static &#x27;js/dist/game.js&#x27; %&#125;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> ac_game = <span class="keyword">new</span> <span class="title class_">AcGame</span>(<span class="string">&quot;ac_game_12345678&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在<code>views</code>文件夹中创建<code>menu</code>,<code>playground</code>,<code>settings</code>文件夹，并分别在三个文件夹中创建<code>__init__.py</code>文件，创建一个<code>index.py</code>文件,渲染得到html的信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">&quot;multiends/web.html&quot;</span>) <span class="comment"># render回templates下面，所以这里是从multiends开始</span></span><br></pre></td></tr></table></figure><p>在<code>urls</code>文件夹中创建<code>menu</code>,<code>playground</code>,<code>settings</code>文件夹，并分别在三个文件夹中创建<code>__init__.py</code>和<code>index.py</code>文件，在<code>urls</code>目录下创建一个<code>index.py</code>文件,包含url路径<br>分别在三个字文件夹中的index.py文件中写入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>然后在<code>urls</code>目录下的总<code>index.py</code>下include这些路径，并包含刚才views/index.py写的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include</span><br><span class="line"><span class="keyword">from</span> game.views.index <span class="keyword">import</span> index</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;&quot;</span>,index,name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;menu/&quot;</span>,include(<span class="string">&quot;game.urls.menu.index&quot;</span>)),</span><br><span class="line">    path(<span class="string">&quot;playground/&quot;</span>,include(<span class="string">&quot;game.urls.playground.index&quot;</span>)),</span><br><span class="line">    path(<span class="string">&quot;settings/&quot;</span>,include(<span class="string">&quot;game.urls.settings.index&quot;</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>最后再在总的urls.py中修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, include(<span class="string">&#x27;game.urls.index&#x27;</span>)), <span class="comment"># + 默认打开为无选项的</span></span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>这样，基本的框架就搭建好了</p><blockquote><p>完整的过程实质上是在http://114.132.67.106:8000/中，由于无选项，在<code>urls.py</code>中的第一个<code>path</code>查找<br>其中由于include了<code>game.urls.index</code>，进入<code>game/urls/index.py</code>，其中包含了无选项以及三个部分的url<br>无选项，进入<code>game/views/index.py</code>，返回渲染的<code>game/templates/multiends/web.html</code>内容。<br>其中的js内容会创建一个AcGame的class，之后所有的开发都是基于这个<strong>AcGame</strong></p></blockquote><h2 id="2-搭建菜单界面">2.搭建菜单界面</h2><p><font color="red" size="3">注意，如果打开界面出现js错误或图片加载不出来等情况，请先执行浏览器缓存清理!!! </font></p><h3 id="2-1-新建界面">2.1 新建界面</h3><p>创建<code>static/js/src/menu/zbase.js</code>和<code>static/js/src/playground/zbase.js</code>用来保存界面逻辑<br>menu/zbase.js代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js相关</span></span><br><span class="line"><span class="comment">//  当对象是时html的一个组件的时候可用一个$符号放在变量前面</span></span><br><span class="line"><span class="comment">//  当div里面是id时,需要加一个 [&#x27;#&#x27; + ]</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGameMenu</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root;  <span class="comment">//只有总的js文件才会传入id，其余都是传的root，其实就是总的js中的id</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$menu</span> = $(<span class="string">`  </span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-menu-field&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-single-mode&quot;&gt;</span></span><br><span class="line"><span class="string">                    单人模式</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;br&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-multi-mode&quot;&gt;</span></span><br><span class="line"><span class="string">                    多人模式</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;br&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-settings&quot;&gt;</span></span><br><span class="line"><span class="string">                    设置</span></span><br><span class="line"><span class="string">                &lt;/div&gt;  </span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>);              <span class="comment">//menu的布局</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$ac_game</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$menu</span>);  <span class="comment">//将menu加入到ac_game中，其中ac_game是总的js传进来的，也就是总的对象</span></span><br><span class="line">        <span class="comment">//用于找按钮</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$single_mode</span> = <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">find</span>(<span class="string">&#x27;.ac-game-menu-field-item-single-mode&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$multi_mode</span> = <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">find</span>(<span class="string">&#x27;.ac-game-menu-field-item-multi-mode&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$settings</span> = <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">find</span>(<span class="string">&#x27;.ac-game-menu-field-item-settings&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();     <span class="comment">//一般在最开始打开界面的时候会有操作，就在constructor析构函数中调用start</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">add_listening_events</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">add_listening_events</span>(<span class="params"></span>) &#123;    <span class="comment">//点击不同按钮的操作</span></span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$single_mode</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            outer.<span class="title function_">hide</span>();</span><br><span class="line">            outer.<span class="property">root</span>.<span class="property">playground</span>.<span class="title function_">show</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$multi_mode</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;click multi mode&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$settings</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;click settings&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">show</span>(<span class="params"></span>) &#123; <span class="comment">//显示menu界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">hide</span>(<span class="params"></span>) &#123; <span class="comment">//关闭menu界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>playground/zbase.js代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGamePlayground</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span> = $(<span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div&gt;</span></span><br><span class="line"><span class="string">                游戏界面</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">hide</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$ac_game</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$playground</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">show</span>(<span class="params"></span>) &#123; <span class="comment">//打开playground界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">hide</span>(<span class="params"></span>) &#123; <span class="comment">//关闭playground界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改static/js/src/zbase.js文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AcGame</span> &#123; <span class="comment">// 由于之前web.html文件中只部分引入AcGame，所以需要export暴露出来</span></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">id</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = id;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$ac_game</span> = $(<span class="string">&#x27;#&#x27;</span> + id);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">menu</span> = <span class="keyword">new</span> <span class="title class_">AcGameMenu</span>(<span class="variable language_">this</span>);             <span class="comment">//创建刚才写的js文件中的对象，并会在其中加入到总的AcGame中</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = <span class="keyword">new</span> <span class="title class_">AcGamePlayground</span>(<span class="variable language_">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，在执行./compress_game_js.sh之后就会在之前提到过的static/js/dist/game.js中包含所有的js文件内容<br>也就意味着前端一旦返回web.html内容就会在game.js中找到所有的js信息</p><h3 id="2-2-初识css文件">2.2 初识css文件</h3><p>仅仅修改js知识在页面中显示了这些内容，对使用者不友好，需要修改/static/css/game.css文件如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">这里用到的<span class="selector-class">.xxx</span>必须是之前js中定义在&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line"><span class="selector-class">.ac-game-menu</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/static/image/menu/background.gif&quot;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">    user-select: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-menu-field</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20vw</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">40vh</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">19vw</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-menu-field-item</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">7vh</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">18vw</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">5vh</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2vh</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">39</span>, <span class="number">21</span>, <span class="number">28</span>, <span class="number">0.6</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">0.2vw</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-menu-field-item</span><span class="selector-pseudo">:hover</span> &#123; <span class="comment">/*指针悬停设置 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>);</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">100ms</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django_learning_1</title>
      <link href="/2022/06/19/django_learning1/"/>
      <url>/2022/06/19/django_learning1/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>本次记录开始了Django正式，系统的学习<br><a href="https://github.com/Yg125/acapp">项目地址</a><br>在vscode中打开远程进行编辑</p><h2 id="1-项目创建">1. 项目创建</h2><p><code>django-admin startproject xxx(myapp)</code> 创建一个django项目<br>即可得到如下所示的myapp项目文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">myapp/</span><br><span class="line">├── manage.py</span><br><span class="line">└── myapp</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── asgi.py</span><br><span class="line">    ├── settings.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    └── wsgi.py</span><br></pre></td></tr></table></figure><p><code>manage.py</code>文件非常重要，django的命令与其有关</p><blockquote><p>Django’s command-line utility for administrative tasks.</p></blockquote><p>命令<code>python3 manage.py runserver 0.0.0.0:8000</code> 开启服务，即可打开初始的页面,由于我已经在我的腾讯云中打开了8000端口来对应django，所以可以使用。<br>如果想另外使用django的项目需要使用别的端口，或者不能同时使用相同端口！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Watching for file changes with StatReloader</span><br><span class="line">Performing system checks...</span><br><span class="line"></span><br><span class="line">System check identified no issues (0 silenced).</span><br><span class="line"></span><br><span class="line">You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.</span><br><span class="line">Run &#x27;python manage.py migrate&#x27; to apply them.</span><br><span class="line">June 19, 2022 - 07:19:03</span><br><span class="line">Django version 3.2.8, using settings &#x27;myapp.settings&#x27;</span><br><span class="line">Starting development server at http://0.0.0.0:8000/</span><br><span class="line">Quit the server with CONTROL-C.</span><br></pre></td></tr></table></figure><p>这时会出现以上提示，由于是在服务器上搭建的django所以打开网页时要用服务器的ip地址<br>输入114.132.67.106:8000即可访问<br>但此时会出现错误<br><img src="/2022/06/19/django_learning1/error1.png" alt="错误1"><br>需要在settings.py中第28行添加ip地址<br><code>ALLOWED_HOSTS = [&quot;114.132.67.106&quot;]</code></p><p>刷新之后再次打开网页即可出现初始django页面</p><h2 id="2-django内容创建">2. django内容创建</h2><h3 id="2-1-创建管理员账户">2.1 创建管理员账户</h3><p>命令<code>python3 manage.py startapp xxx(game)</code>创建game内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">game</span><br><span class="line">├── __init__.py</span><br><span class="line">├── admin.py</span><br><span class="line">├── apps.py</span><br><span class="line">├── migrations</span><br><span class="line">│   └── __init__.py</span><br><span class="line">├── models.py</span><br><span class="line">├── tests.py</span><br><span class="line">└── views.py</span><br></pre></td></tr></table></figure><p>包含了django提供的admin功能，此时需要将数据库的内容migrate同步一下<code>python3 manage.py migrate</code><br>这样就可以114.132.67.106:8000/admin进入管理员界面了<br>之后键入<code>python3 manage.py createsuperuser</code>创建管理员，即可登录并管理后台</p><p>在<code>settings.py</code>文件中找到<code>TIME_ZONE</code>，修改为<code>Asia/Shanghai</code>，可以显示中国时间</p><h3 id="2-2-创建自己的页面">2.2 创建自己的页面</h3><p><a href="http://xn--gameurls-od0m08ds0kxvt04x24usraj896be7zbozj.py">首先需要在game中新建文件urls.py</a> 和文件夹 templates<br><a href="http://xn--gamemodels-yt2pq95kef1atnck42gfr9cwq3a.py">game中最重要的就是models.py</a>, <a href="http://views.py">views.py</a>, <a href="http://urls.py">urls.py</a>, templates<br><a href="http://models.py">models.py</a> – 存储数据结构（类）<br><a href="http://views.py">views.py</a> – 函数（视图）<br><a href="http://urls.py">urls.py</a> – 网页地址<br>templates – html<br><strong>注意！！！</strong><br>总的urls.py包含所有url信息，添加的网页都需要写到这里<br>game里的urls.py只是找到在game这个app下的网页内容</p><ol><li><p>在views.py中</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse <span class="comment">#http返回字符串</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    line1 = <span class="string">&#x27;&lt;h1 style=&quot;text-align: center&quot;&gt; Django project &lt;/h1&gt;&#x27;</span></span><br><span class="line">    line2 = <span class="string">&#x27;&lt;img src = https://www.ruanyifeng.com/blogimg/asset/2018/bg2018020901.png width = 1000&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(line1 + line2)</span><br></pre></td></tr></table></figure></li><li><p>在game的urls.py中</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> game.views <span class="keyword">import</span> index</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, index, name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>在总的urls.py中加入新添加的网页</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include <span class="comment"># +</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;game/&#x27;</span>, include(<span class="string">&#x27;game.urls&#x27;</span>)), <span class="comment"># + 输入114.132.67.106:8000/game即可进入新添加的页面</span></span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ol><p>至此，基础的搭建过程就已经结束</p>]]></content>
      
      
      <categories>
          
          <category> Django Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker_learning</title>
      <link href="/2022/06/17/docker_learning/"/>
      <url>/2022/06/17/docker_learning/</url>
      
        <content type="html"><![CDATA[<h2 id="1-关于镜像-images-的命令">1. 关于镜像(images)的命令</h2><ol><li><code>docker image ls</code>：列出本地所有镜像</li><li><code>docker pull ubuntu:20.04</code>：拉取一个ubuntu镜像</li><li><code>docker image rm ubuntu:20.04</code>:删除一个ubuntu镜像</li><li><code>docker save -o ubuntu_20_04.tar ubuntu:20.04</code>：将镜像ubuntu:20.04导出到本地压缩文件ubuntu_20_04.tar中</li><li><code>docker load -i ubuntu_20_04.tar</code>：将镜像ubuntu:20.04从本地压缩文件ubuntu_20_04.tar中加载出来</li></ol><h2 id="2-关于容器-container-的命令">2.关于容器(container)的命令</h2><ol><li><p><code>docker create -it ubuntu:20.04</code>：利用镜像ubuntu:20.04创建一个容器，创建之后就exit了</p></li><li><p><code>docker run -itd ubuntu:20.04</code>：创建并启动一个容器</p></li><li><p><code>docker ps -a</code>：查看本地的所有容器，其中<code>docker ps</code>查看本地所有运行的容器</p></li><li><p><code>docker rename CONTAINER name</code>：重命名容器</p></li><li><p><code>docker start CONTAINER</code>：启动容器</p><p><strong>注意 这里的CONTAINER可以是容器的names或者ID</strong></p></li><li><p><code>docker stop CONTAINER</code>：停止容器</p></li><li><p><code>docker restart CONTAINER</code>：重启容器</p></li><li><p><code>docker attach CONTAINER</code>：进入容器</p><ul><li>先按<code>Ctrl-p</code>，再按<code>Ctrl-q</code>可以挂起容器,如果直接<code>exit</code>就会把容器关闭</li></ul></li><li><p><code>docker rm CONTAINER</code>：删除容器<strong>只能删除已停止的容器</strong></p></li><li><p><code>docker container prune</code>：删除所有已停止的容器</p></li><li><p>.  <code>docker export -o xxx.tar CONTAINER</code>：将容器CONTAINER导出到本地文件xxx.tar中</p></li><li><p><code>docker import xxx.tar image_name:tag</code>：将本地文件xxx.tar导入成镜像，并将镜像命名为image_name:tag<br><strong>注意容器导出后再导入得到的是镜像image而不是容器container</strong></p></li><li><p><code>docker export/import</code>与<code>docker save/load</code>的区别:</p><ul><li><code>export/import</code>会丢弃历史记录和元数据信息，仅保存容器当时的快照状态</li><li><code>save/load</code>会保存完整记录，体积更大</li></ul></li><li><p><code>docker top CONTAINER</code>：查看某个容器内的所有进程</p></li><li><p><code>docker stats</code>：查看所有容器的统计信息，包括CPU、内存、存储、网络等信息</p></li><li><p><code>docker cp xxx CONTAINER:xxx</code> 或 <code>docker cp CONTAINER:xxx xxx</code>：在本地和容器间复制文件</p></li><li><p><code>docker update CONTAINER --memory 500MB</code>：修改容器限制</p></li></ol><h2 id="3-docker登录容器需要注意的地方">3. Docker登录容器需要注意的地方</h2><ul><li>在进入一个容器之后——<code>docker attach container</code>是直接以<code>root</code>用户来操作（以ubuntu为例）<br>输入命令<code>passwd</code>即可为<code>root</code>用户创建密码</li><li>如果想要创建一个普通用户（root用户权限太大），应该使用<code>adduser xxx</code>，这样就创建了普通用户，再<code>usermod -aG sudo xxx</code>为用户添加可sudo权限</li><li>如果在<code>attach</code>进入容器之中<code>exit</code>/<code>Ctrl-d</code>的话会关闭这个容器，这个容器也就停止了，如果只是想暂时挂起而不是关闭的话使用的是先按<code>Ctrl-p</code>，再按<code>Ctrl-q</code></li><li>如果是<code>ssh</code>登录一个容器（因为容器也是一个ubuntu服务器了），那么可以直接<code>exit</code>/<code>Ctrl-d</code>退出，不影响容器本身状态，例如<br><code>ssh root@localhost -p 20000</code><br><code>ssh xxxx@localhost -p 20000</code><br>其中localhost为服务器ip地址，见下</li></ul><h2 id="4-涉及ssh及登录端口">4. 涉及ssh及登录端口</h2><p>我的服务器以20号端口ssh登录，那么如果想要本地或者服务器直接ssh到docker的容器的话（将容器看作服务器）需要修改端口，在我的Tencent服务器开启了20000端口，这样需要ssh到docker的容器的话就可以指明端口号为20000即可成功ssh了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 20000:22 --name my_server -itd ubuntu:18.04 </span><br><span class="line"><span class="comment"># 创建并运行ubuntu:18.04镜像并将20000端口映射到20号端口</span></span><br></pre></td></tr></table></figure><font color="red" size="5">踩坑记录</font><p>如果是最原始的镜像可能没有配置ssh，需要手动配置<br><a href="https://blog.csdn.net/weixin_43590796/article/details/109666934?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-109666934-blog-122604934.pc_relevant_paycolumn_v3&amp;spm=1001.2101.3001.4242.1&amp;utm_relevant_index=3">参考链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get update </span><br><span class="line">apt-get install openssh-server</span><br><span class="line">安装完成后使用 service ssh start </span><br><span class="line">vim /etc/ssh/sshd_config </span><br><span class="line">将PermitRootLogin的值改为<span class="built_in">yes</span> 将PasswordAuthentication的值改为<span class="built_in">yes</span></span><br><span class="line">最后service ssh restart</span><br></pre></td></tr></table></figure><p><img src="/2022/06/17/docker_learning/docker%E7%AB%AF%E5%8F%A3%E6%88%AA%E5%9B%BE.png" alt="我开启的20000端口"><br>即20000端口也可以实现20号端口ssh的功能<br>同时还可以在本地<code>./.ssh/config</code>中配置docker容器的登录信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host Djserver</span><br><span class="line">  Hostname 114.132.67.106</span><br><span class="line">  User yangang</span><br><span class="line">  port 20000</span><br></pre></td></tr></table></figure><p>并使用<code>ssh-copy-id Hostname</code>即可直接免密登录</p><blockquote><p>由于docker容器部署在服务器上，所以IP地址即Hostname与服务器的IP地址相同，只不过端口号不同，连接/设置时只需强调端口号，ip地址是一样的</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 毕设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git_learning</title>
      <link href="/2022/06/16/git_learning/"/>
      <url>/2022/06/16/git_learning/</url>
      
        <content type="html"><![CDATA[<h1 id="git基本知识及指令">git基本知识及指令</h1><p><strong>git即管理本地代码及与云端代码互存</strong></p><h3 id="1-git原理">1 git原理</h3><p>git建立仓库之后将代码划分了三个区域<br>本地工作区work，暂存区stage，版本库commit <u>连接远程仓库还可以有origin</u><br>work可以修改代码，修改后的代码需要使用<code>git add xxx</code>加入暂存区stage<br>暂存区在合适的时候可以把代码<code>git commit -m &quot;xx&quot;</code>推送到版本库，<br>这就是一个版本（由某个hash值确定），可以使用git操作进行选择版本<br>branch可以理解为在这个HEAD下创建另一个方向，做得任何改动都是这个branch的<br>可以<code>git merge branch</code>将这个branch与当前branch合并，也就是HEAD指向它的最后一个版本，<br>然后将branch归于当前branch<br>可能会在merge之前两个/多个branch都做了改动，那么会有冲突，手动选择改变的版本即可<br>画图很容易理解，一条branch只有一条路，中间分路的话可以分别走，也可以合并，合并就要到最终的版本<br>如果两/多条路都走了那么在合并时会冲突，需要手动选择</p><h3 id="2-git命令分类整理">2 git命令分类整理</h3><hr><p>全局设置</p><ol><li><code>git config --global user.name xxx</code>：设置全局用户名，信息记录在~/.gitconfig文件中</li><li><code>git config --global user.email xxx@xxx.com</code>：设置全局邮箱地址，信息记录在~/.gitconfig文件中</li><li><code>git init</code>：将当前目录配置成git仓库，信息记录在隐藏的.git文件夹中</li></ol><p>常用命令</p><ol><li><code>git add XX</code> ：将XX文件添加到暂存区</li><li><code>git add .</code>：将所有修改的文件加到暂存区</li><li><code>git commit -m &quot;给自己看的备注信息&quot;</code>：将暂存区的内容提交到当前分支</li><li><code>git status</code>：查看仓库状态</li><li><code>git log</code>：查看当前分支的所有版本</li><li><code>git diff</code>:查看更改的内容，只能查看显示暂存区和工作区的差异</li><li><code>git clone git@git.acwing.com:xxx/XXX.git</code>：将远程仓库XXX下载到当前目录下</li><li><code>git reflog</code>:查看HEAD指针的移动历史（包括被回滚的版本）</li><li><code>git log --pretty=oneline</code>：用一行来显示</li><li><code>git restore --staged xx</code>：将xx从暂存区里移除，即还是修改文件，只不过没有在stage中了</li><li><code>git restore xx</code>：将xx尚未加入暂存区stage的修改撤销，即撤销改动，如果stage为空，则撤销到上一个commit</li><li><code>git reset --hard HEAD^</code> 或<code>git reset --hard HEAD~ </code>：将代码库回滚到上一个版本</li><li><code>git reset --hard 版本号</code>：回滚到某一特定版本 其中版本号可以通过<code>git reflog</code>得到想要的版本号</li><li><code>git checkout -b branch_name</code>：创建并切换到branch_name这个分支</li><li><code>git branch branch_name</code>:创建branch_name的分支</li><li><code>git branch</code>：查看所有分支和当前所处分支</li><li><code>git checkout branch_name</code>：切换到branch_name这个分支</li><li><code>git branch -d branch_name</code>：删除本地仓库的branch_name分支</li><li><code>git merge branch_name</code>：将分支branch_name合并到当前分支上</li><li><code>git remote add origin git@git.acwing.com:xxx/XXX.git</code>：将本地仓库关联到远程仓库</li><li><code>git push -u</code> (第一次需要-u以后不需要) ：将当前分支推送到远程仓库</li><li><code>git push --set-upstream origin branch_name</code>:设置本地的branch_name分支对应远程仓库的branch_name分支</li><li><code>git push -d origin branch_name</code>：删除远程仓库的branch_name分支</li><li><code>git pull</code>：将远程仓库的当前分支与本地仓库的<strong>当前分支</strong>合并</li><li><code>git pull origin branch_name</code>：将远程仓库的branch_name分支与本地仓库的<strong>当前分支</strong>合并</li><li><code>git branch --set-upstream-to=origin/branch_name1 branch_name2</code>：将远程的branch_name1分支与本地的branch_name2分支对应,通常这样来建立远程和本地的分支联系，然后在从远程拉取到本地指定branch</li><li><code>git checkout -t origin/branch_name</code>:将远程的branch_name分支拉取到本地</li></ol><h3 id="3-gitignore">3. .gitignore</h3><hr><p>通过配置.gitignore文件git的时候可以直接忽略某些自动生成的文件不上传</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.vscode/   <span class="comment">#忽略.vscode文件夹的文件更新</span></span><br><span class="line">*.<span class="built_in">log</span>       <span class="comment">#忽略所有.log后缀的文件</span></span><br><span class="line">config.ini  <span class="comment">#忽略config.ini文件</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux_learning</title>
      <link href="/2022/06/16/Linux_learning/"/>
      <url>/2022/06/16/Linux_learning/</url>
      
        <content type="html"><![CDATA[<h1 id="linux学习重点">Linux学习重点</h1><h2 id="1-linux常用指令">1. Linux常用指令</h2><h3 id="1-1-文件转移指令">1.1 文件转移指令</h3><p>查看文件夹详细信息  <code>ls -al</code>  和 <code>ls -la</code> 以及 <code>ll</code></p><ul><li><code>cd / </code>   返回根目录</li><li><code>cd ~  </code>  直接返回家目录</li><li><code>cd  </code>    直接返回家目录</li><li><code>cd -</code>返回上一次使用的目录</li><li>其中<code>pwd</code>返回当前所在路径</li><li>家目录在LINUX中就是<code>/home</code>下的文件通常为<code>/home/guest</code></li></ul><h3 id="1-2-管道">1.2 管道 ｜</h3><p><strong>概念</strong><br>管道类似于文件重定向，可以将前一个命令的<code>stdout</code>重定向到下一个命令的<code>stdin</code>。<br><strong>注意</strong>只针对命令，不针对文件<br>如果命令需要的是参数而不是<code>stdin</code>的输入，那么就需要在该命令之前用到<code>xargs</code>将<code>stdin</code>转化为参数<br>比如<code>find . -name '*.cpp' | wc -l &gt; ans.txt</code></p><h3 id="1-3-环境变量">1.3 环境变量</h3><p>Linux系统中会用很多环境变量来记录<strong>配置信息</strong>。<br>环境变量类似于全局变量，可以被各个进程访问到。我们可以通过修改环境变量来方便地修改系统配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span>  <span class="comment"># 显示当前用户的变量</span></span><br><span class="line"><span class="built_in">set</span>  <span class="comment"># 显示当前shell的变量，包括当前用户的变量;</span></span><br><span class="line"><span class="built_in">export</span>  <span class="comment"># 显示当前导出成用户变量的shell变量</span></span><br></pre></td></tr></table></figure><p>输出某个环境变量的值：<code>echo $PATH</code><br>为了将对环境变量的修改应用到未来所有环境下，可以将修改命令放到<code>~/.bashrc</code>文件中。<br>修改完<code>~/.bashrc</code>文件后，记得执行<code>source ~/.bashrc</code>，来将修改应用到当前的<code>bash</code>环境下。</p><h4 id="常见环境变量">常见环境变量</h4><ol><li><code>home</code>：用户的家目录</li><li><code>PATH</code>：可执行文件（命令）的存储路径。路径与路径之间用:分隔。当某个可执行文件同时出现在多个路径中时，会选择从左到右数第一个路径中的执行。所有存储路径的环境变量，均采用从左到右的优先顺序。</li></ol><p>如果想要将自己的命令在任何路径下直接执行时，就需要将该命令放到<code>PATH</code>中，具体方法为：</p><ol><li>在~/.bashrc文件末尾添加一行：<code>export PATH=/home/acs/homework/lesson_7/homework_0:$PATH</code></li><li>运行<code>source ~/.bashrc</code><br>即可将该可执行文件放到PATH中也就可以在任意路径下执行该命令了</li></ol><h3 id="1-4-系统状况">1.4 系统状况</h3><ol><li><code>top</code>：查看所有进程的信息（Linux的任务管理器)<br>打开后，输入<code>M</code>：按使用内存排序<br>打开后，输入<code>P</code>：按使用CPU排序<br>打开后，输入<code>q</code>：退出</li><li><code>df -h</code>：查看硬盘使用情况</li><li><code>free -h</code>：查看内存使用情况</li><li><code>du -sh</code>：查看当前目录占用的硬盘空间</li><li><code>ps aux</code>：查看所有进程 <code>ps aux</code>通常和<code>grep</code>一起来使用查找进程</li><li><code>kill -9 pid</code>：杀死编号为pid的进程 传递某个具体的信号：<code>kill -s SIGTERM pid</code></li><li><code>netstat -nt</code>：查看所有网络连接</li><li><code>w</code>：列出当前登陆的用户</li><li><code>ping www.baidu.com</code>：检查是否连网</li></ol><h3 id="1-5文件权限">1.5文件权限</h3><p><code>chmod</code>：修改文件权限</p><ul><li><code>chmod +x xxx</code>：给xxx添加可执行权限</li><li><code>chmod -x xxx</code>：去掉xxx的可执行权限</li><li><code>chmod 777 xxx</code>：将xxx的权限改成777</li><li><code>chmod 777 xxx -R</code>：递归修改整个文件夹的权限</li></ul><h3 id="1-6-文件检索">1.6 文件检索</h3><ol><li><code>find /path/to/directory/ -name '*.py'</code>：搜索某个文件路径下的所有<code>*.py</code>文件</li><li><code>grep xxx</code>：从stdin中读入若干行数据，如果某行中包含xxx，则输出该行；否则忽略该行。</li><li><code>wc</code>：统计行数、单词数、字节数.既可以从<code>stdin</code>中直接读入内容；也可以在命令行参数中传入文件名列表；<ul><li><code>wc -l</code>：统计行数</li><li><code>wc -w</code>：统计单词数</li><li><code>wc -c</code>：统计字节数</li></ul></li><li><code>tree</code>：展示当前目录的文件结构<ul><li><code>tree /path/to/directory/</code>：展示某个目录的文件结构</li><li><code>tree -a</code>：展示隐藏文件</li></ul></li><li><code>ag xxx</code>：搜索当前目录下的所有文件，检索xxx字符串</li><li><code>cut</code>：分割一行内容 <strong>从stdin中读入多行数据</strong><ul><li><code>echo $PATH | cut -d ':' -f 3,5</code>：输出PATH用:分割后第3、5列数据</li><li><code>echo $PATH | cut -d ':' -f 3-5</code>：输出PATH用:分割后第3-5列数据</li><li><code>echo $PATH | cut -c 3,5</code>：输出PATH的第3、5个字符</li><li><code>echo $PATH | cut -c 3-5</code>：输出PATH的第3-5个字符</li></ul></li><li><code>sort</code>：将每行内容按字典序排序<br>可以从stdin中读取多行数据<br>可以从命令行参数中读取文件名列表</li><li><code>xargs</code>：将<code>stdin</code>中的数据用空格或回车分割成命令行参数<br><code>find . -name '*.py' | xargs cat | wc -l</code>：统计当前目录下所有python文件的总行数</li></ol><h3 id="1-7-查看文件内容">1.7 查看文件内容</h3><ol><li><code>head -x xxx</code>：展示xxx的前x行内容 同时支持从<code>stdin</code>读入内容</li><li><code>tail -x xxx</code>：展示xxx末尾x行内容 同时支持从<code>stdin</code>读入内容</li></ol><h3 id="1-8-压缩解压缩文件">1.8 压缩解压缩文件</h3><ul><li><code>tar</code>：压缩文件</li><li><code>tar -zcvf xxx.tar.gz /path/to/file/*</code>：压缩</li><li><code>tar -zxvf xxx.tar.gz</code>：解压缩</li></ul><h4 id="注意">注意</h4><p>​<code>cp xxx xxx</code><br>注意后面是复制到的地方，如果两个地方都是普通文件，则直接将前一个复制过去，<br>如果前面是普通文件后面的是文件夹dir，则将文件复制到文件夹里面去<br>如果前面后面都是文件夹，则需要加-r强制将文件夹复制到另一个文件夹里面去<br>如果前面是文件夹后面是普通文件，那么错误<br>此前操作如果使用没有创建的文件或者文件夹会直接创建一个新的<br><strong>注意，xxx都可以表示文件地址，如果没有指明路径（绝对还是相对），都是当前的相对路径</strong><br><strong>凡是有文件路径的地方都可以写绝对路径，没有写明的话都默认是相对路径</strong></p><p>​<code>mv xxx xxx</code><br>将前面一个地方的文件转移到后一个地方去，<br>如果后一个文件没有创建，那么就是重命名，将前一个地方重命名为后一个地方的名字<br>如果两个都是普通文件,或者都是文件夹，那么也是重命名<br>如果前一个是普通文件，后一个是文件夹，那么就将前一个普通文件移到文件夹的目录下<br>如果前一个是文件夹，后一个是普通文件，那么错误</p><p>在涉及到文件匹配问题中经常用到管道，<code>xargs</code>，<code>find</code>，<code>cut</code>，<code>grep</code>，以及重定向，需要灵活使用<br>比如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">&#x27;*.cpp&#x27;</span> | <span class="built_in">wc</span> -l &gt; ans.txt  统计当前目录下cpp文件数目</span><br><span class="line">find . -name <span class="string">&#x27;*.cpp&#x27;</span> | xargs <span class="built_in">cat</span> | <span class="built_in">wc</span> -l &gt; ans1.txt 统计当前目录下的所有cpp文件的总行数</span><br><span class="line">find . -name <span class="string">&#x27;*.py&#x27;</span> | xargs <span class="built_in">cat</span> | grep thrift | <span class="built_in">wc</span> -l &gt; ans2.txt 统计所有py文件中包含thrift字符串的总行数</span><br><span class="line">find . -name <span class="string">&#x27;*.py&#x27;</span> | xargs <span class="built_in">rm</span>  删除当前目录下的所有py文件</span><br><span class="line"><span class="built_in">cat</span> scores.txt | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 1 &gt; names.txt    以空格隔开每一列将第一、二、三列保存在文件中</span><br><span class="line"><span class="built_in">cat</span> scores.txt | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 2 &gt; mathematics.txt</span><br><span class="line"><span class="built_in">cat</span> scores.txt | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 3 &gt; algorithm.txt</span><br><span class="line"><span class="built_in">cat</span> scores.txt | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 1 | <span class="built_in">sort</span> &gt; names.txt 将第一列排序保存在文件中</span><br><span class="line"></span><br><span class="line">灵活运用xargs将stdin转化为参数，grep进行匹配，<span class="built_in">wc</span> -l计数行，find查找</span><br></pre></td></tr></table></figure><h2 id="2-tmux使用讲解">2. tmux使用讲解</h2><p><strong>注意</strong><br>在tmux中要选择并进行复制使用</p><ol><li>按下<code>Ctrl + a</code>后松开手指，然后按<code>[</code></li><li>用鼠标选中文本，被选中的文本会被自动复制到tmux的剪贴板</li><li>按下<code>Ctrl + a</code>后松开手指，然后按<code>]</code>，会将剪贴板中的内容粘贴到光标处</li></ol><p>只有这样才能从<code>tmux</code>中复制并保存在系统剪贴板中；<br>其余情况，单独终端中复制粘贴命令是<code>shift+Ctrl+c</code>、<code>shift+Ctrl+v</code></p><p>在我的<code>tmux.conf</code>中已经配置可以使用鼠标以及修改默认<code>prefix</code>为<code>Ctrl+a</code><br>tmux中<code>Ctrl+a+%</code>横向创建新的pane，<code>Ctrl+a+&quot;</code>纵向创建新的pane<br><code>Ctrl+a+z</code>全屏pane，常用于复制文本时<br><code>Ctrl+d</code>关闭当前pane<br><code>Ctrl+a+d</code>挂起该tmux<br><code>tmxu a</code>重连上一个挂起的tmux</p><p>关于为什么要使用和建议使用<code>tmux</code></p><blockquote><p>因为<code>tmux</code>可以在终端莫名关闭或者连接中断之后挂起而不会导致编写的过程丢失，使用<code>tmux a</code>可以直接重连上一个挂起的<code>tmux</code></p></blockquote><p>如果需要修改tmux的配置可以修改<code>~/.tmux.conf</code> 配置文件</p><h2 id="3-vim常用命令">3. vim常用命令</h2><p><code>vim</code>有以下三种模式</p><ol><li>一般命令模式<br>默认模式。命令输入方式：</li><li>编辑模式<br>在一般命令模式里按下<code>i</code>，会进入编辑模式。按下ESC会退出编辑模式，返回到一般命令模式。</li><li>命令行模式<br>在一般命令模式里按下<code>:</code> <code>/</code> <code>?</code>三个字母中的任意一个，会进入命令行模式。命令行在最下面。可以查找、替换、保存、退出、配置编辑器等。</li></ol><ul><li><code>:set nonu</code> 取消行号，用于复制文本</li><li><code>:set paste</code> 设置成粘贴模式，取消代码自动缩进<ul><li>在复制外部文字到vim里面的时候需要先开启<code>:set paste</code>然后复制完之后再<code>:set no paste</code></li></ul></li><li><code>gg</code> 到第一行</li><li><code>G</code> 到最后一行 <strong>可以用G表示多少行，比如12G为12行</strong></li><li><code>v</code> 用于选中文本，<strong>可以为xxvxx意为xx行到xx行 比如12Gv24G</strong></li><li><code>0</code> 将光标移到行首，<code>$</code>将光标移至行末</li><li><code>/word</code> word查找 <strong>继续按n可以移动光标</strong></li><li><code>n&lt;Enter&gt;</code>：n为数字，光标向下移动n行</li><li><code>n&lt;Space&gt;</code>：n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符 <strong>常用来寻找第几行第几个字符</strong></li><li><code>d</code> 删除选中的文本（剪切）<code>dd</code>删除当前行 <strong>也可以使用指定行删除<code>12Gd24G</code>删除12行到24行的内容</strong></li><li><code>y</code> 复制选中的文本。     <code>yy</code>复制当前行 <strong>同理也可以复制指定行的内容12Gy24G</strong></li><li><code>p</code> 将复制的文本粘贴到下一行/下一个位置</li><li><code>u</code> 撤销</li><li><code>:noh</code> 关闭高亮</li><li><code>gg=G</code> 将全文代码格式化</li><li><code>:w</code> 保存 <code>w！</code>强制保存</li><li><code>:q</code> 退出 <code>q!</code> 强制退出</li><li><code>wq</code> 保存并退出</li><li><code>:n1,n2s/word1/word2/g：</code> n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为word2</li><li><code>:1,$s/word1/word2/g：</code> 将全文的word1替换为word2</li><li><code>:1,$s/word1/word2/gc：</code> 将全文的word1替换为word2，且在替换前要求用户确认。</li></ul><p>如果需要修改vim的配置可以修改<code>~/.vimrc vim</code>配置文件</p><h2 id="3-ssh">3. ssh</h2><h3 id="3-1-ssh远程登录">3.1 ssh远程登录</h3><p>一般情况可以直接使用<code>ssh user@hostname</code><br>然后输入密码即可连接远程<br>其中<code>hostname</code>一般为域名或者IP地址</p><p>如果想连接自己的服务器或经常性远程登录可以采用如下方式</p><ol><li>在配置文件<code>~/.ssh/config</code>中配置服务器相关信息（没有这个文件直接创建）相当于在本地给服务器取了个别名，并保存了<code>user</code>和<code>hostname</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host myserver</span><br><span class="line">    Hostname xxx </span><br><span class="line">    User xxx</span><br></pre></td></tr></table></figure><p>配置之后可以直接 <code>ssh myserver1</code> ，不过还是需要输入密码，要想免密登录还需要配置密钥</p><ol start="2"><li>创建密钥</li></ol><p><code>ssh-keygen</code> 创建之后会在<code>~/.ssh</code>下多两个文件<br><code>id_rsa</code> 私钥<br><code>id_rsa.pub</code> 公钥</p><p>想要免密登陆ssh可以将公钥<code>id_rsa.pub</code>中的内容复制到服务器的<code>~/.ssh/authorized_keys</code>中<br>或者直接使用<code>ssh-copy-id Hostname</code>也可以</p><p>如果需要退出服务器，按下<code>Control+D</code>或者终端输入<code>logout</code></p><h3 id="3-2-ssh命令">3.2 ssh命令</h3><p>在本地操作服务器使用命令 <code>ssh user@hostname command</code> 或者如果是在config里面配置了相关信息的服务器可以直接 <code>ssh Host command</code></p><p><strong>注意</strong><br>单引号中的<code>$i</code>可以求值<br><code>ssh myserver 'for ((i = 0; i &lt; 10; i ++ )) do echo $i; done' </code><br>双引号中的<code>$i</code>不可以求值<br><code>ssh myserver &quot;for ((i = 0; i &lt; 10; i ++ )) do echo $i; done&quot;</code></p><p>这是因为<code>ssh</code>操作时会在本地先解析命令，双引号直接解析掉了，那么传过去的i就没有了，但是单引号不会被解析，直接就穿过去了，所以能正确输出0到9</p><h3 id="3-3-scp-传文件">3.3 scp 传文件</h3><p><code>scp source:path destination:path</code> 默认是在<code>home</code>地址<br>可以传文件夹需要加<code>-r</code>，且加在地址之前<br>比如<code>scp -r ~/tmp myserver:/home/acs/</code><br>注意服务器是不能<code>ssh</code>本地的，所以不要在服务器上使用<code>scp</code>往本地传文件（没配置相关信息连不上）<br>但是可以在本地使用<code>scp</code>实现互传，比如可以用<code>scp</code>从本地往服务器传也可以实现从服务器往本地传<br>注意在这里shell语言中的<code>$()</code>和<code>``</code>也是可以用的，用<code>pwd</code>比较方便求地址</p><p>当传入的名字可能含有空格的时候需要注意<br><code>ssh server mkdir homework/lesson_4/homework_4/\&quot;$1\&quot; </code>正确<br><code>ssh server mkdir homework/lesson_4/homework_4/&quot;'$1'&quot; </code>正确<br><code>ssh server mkdir homework/lesson_4/homework_4/'&quot;$1&quot;' </code>错误<br>原理都是在本地解析一遍再传到服务器<br>第一种本地解析的时候不解析，直接传过去<br>第二种本地解析了还有单引号里的<code>$1</code>，可以得到正确的值<br>第三种直接把双引号<code>$1</code>传过去，没有意义</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/06/16/hello-world/"/>
      <url>/2022/06/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
